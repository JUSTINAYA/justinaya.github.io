<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker创建Ubantu容器</title>
    <url>/2023/09/04/2023/Docker%E5%88%9B%E5%BB%BAUbantu%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<blockquote>
<p>为Docker创建一个Ubantu容器</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>今天上了<code>大数据挖掘</code>和<code>Linux程序设计</code>的第一课，发现老师都要求在电脑上搞个虚拟机方便以后的操作，所以我准备使用安装Ubantu的Docker容器来作为虚拟机使用。</p>
<h1 id="操作">操作</h1>
<h2 id="基础命令">基础命令</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run [option] 镜像名 [像容器中传入的命令]</span><br></pre></td></tr></table></figure>
<h3 id="常用可选说明">常用可选说明</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">-</span>i 表示以“交互模式”运行容器</span><br><span class="line"> <span class="operator">-</span>t 表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即 分配一个伪终端。</span><br><span class="line"> <span class="comment">--name 为创建的容器命名</span></span><br><span class="line"> <span class="operator">-</span>v 表示目录映射关系(前者是宿主机目录，后者是映射到宿主机上的目录，即 宿主机目录:容器中目录)，可以使 用多个<span class="operator">-</span>v 做多个目录或文件映射。注意:最好做目录映射，在宿主机上做修改，然后 共享到容器上。</span><br><span class="line"> <span class="operator">-</span>d 在run后面加上<span class="operator">-</span>d参数,则会创建一个守护式容器在后台运行(这样创建容器后不 会自动登录容器，如果只加<span class="operator">-</span>i <span class="operator">-</span>t 两个参数，        创建后就会自动进去容器)。</span><br><span class="line"> <span class="operator">-</span>p 表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个<span class="operator">-</span>p 做多个端口映射</span><br><span class="line"> <span class="operator">-</span>e 为容器设置环境变量</span><br><span class="line"> <span class="comment">--network=host 表示将主机的网络环境映射到容器中，容器的网络与主机相同</span></span><br></pre></td></tr></table></figure>
<h3 id="交互式容器">交互式容器</h3>
<p>例如，创建一个交互式容器，并命名为myubuntu</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it --name=myubuntu ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>在容器中可以随意执行linux命令，就是一个ubuntu的环境，当执行exit命令退出时，该容器也随之停止</p>
<h3 id="守护式容器">守护式容器</h3>
<p>创建一个守护式容器:如果对于一个需要长期运行的容器来说，我们可以创建一个守护式容器。在容器内部exit退出时，容器也不会停止。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -dit --name=myubuntu2 ubuntu</span><br></pre></td></tr></table></figure>
<h3 id="进入已运行的容器">进入已运行的容器</h3>
<p>docker exec -it 容器名或容器id 进入后执行的第一个命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it myubuntu2 /bin/bash</span><br></pre></td></tr></table></figure>
<h3 id="查看容器">查看容器</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出本机正在运行的容器</span><br><span class="line">docker container ls</span><br><span class="line"></span><br><span class="line"># 列出本机所有容器，包括已经终止运行的</span><br><span class="line">docker container ls --all</span><br></pre></td></tr></table></figure>
<h3 id="停止与启动容器">停止与启动容器</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 停止一个已经在运行的容器</span><br><span class="line">docker container stop 容器名或容器id</span><br><span class="line"></span><br><span class="line"># 启动一个已经停止的容器</span><br><span class="line">docker container start 容器名或容器id</span><br><span class="line"></span><br><span class="line"># kill掉一个已经在运行的容器</span><br><span class="line">docker container kill 容器名或容器id</span><br></pre></td></tr></table></figure>
<h3 id="删除容器">删除容器</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker container rm 容器名或容器id</span><br></pre></td></tr></table></figure>
<h3 id="将容器保存为镜像">将容器保存为镜像</h3>
<p>我们可以通过如下命令将容器保存为镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker commit 容器名 镜像名</span><br></pre></td></tr></table></figure>
<h3 id="镜像备份与迁移">镜像备份与迁移</h3>
<p>我们可以通过save命令将镜像打包成文件，拷贝给别人使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker save -o 保存的文件名 镜像名</span><br></pre></td></tr></table></figure>
<p>如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker save -o ./ubuntu.tar ubuntu</span><br></pre></td></tr></table></figure>
<p>在拿到镜像文件后，可以通过load方法，将镜像加载到本地</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker load -i ./ubuntu.tar</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Docker</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>2023美赛经验分享</title>
    <url>/2023/02/23/2023/2023%E7%BE%8E%E8%B5%9B%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<blockquote>
<p>2023美赛参赛有感</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>2023年美赛已经告一段落，我也在这一次的比赛中收获良多，因此，我也在此将自己本次参赛的一些心得进行分享，希望能在一定程度上帮助有需要的人。</p>
<h1 id="赛前">赛前</h1>
<h2 id="组队">组队</h2>
<p>我在很早（大概是大一下学期的暑假）就有了参加美赛的想法，当时就在表白墙找了队友，准备在暑假里学一学的，但出于一些原因，最后没能坚持下来。到快美赛报名的时候，我的两个室友已经组好了队，缺一个论文手，我想我也有点word使用功底，就和他们一起组了队。舍友或者朋友之间组队有一个好处，就是大家之间基本上知根知底的，都知道对方是什么样的人，会比较靠谱，而这样的坏处就是专业方向基本一致，像我们三个都是计软院的，我是数据科学与大数据技术的，两个舍友是软件工程的。其实我认为不需要太过追求专业多样化，比如数学专业的建模手，计算机专业的编程手，文科专业的论文手这样的，首先不一定专业对口专业性就强，其次互相之间如果不是很熟悉的话容易出事，造成两人建模甚至一人建模这样子。我认为<code>靠谱</code>还是找队友的第一标准。</p>
<h2 id="准备">准备</h2>
<p>在赛前最好还是了解下参赛流程还有比赛需要的知识，可以在网上找找获奖大佬的经验分享或者问问学校里参赛过的同学，像我就是向院里获F奖的学长请教了，他所分享的经验也让我收获颇深，还给我发了一些论文和模版啥的，我也在比赛的时候用上了；还有就是看了我们学校获O奖的学长宋浩然在B站作出的分享，多多少少也有帮助吧。</p>
<h3 id="关于编程">关于编程</h3>
<p>编程手至少需要会<code>Matlab</code>，像我们组的编程手就是用<code>Matlab</code>还有<code>SPSS</code>，如果是画图，我还推荐<code>Python</code>和<code>Jupyter Notebook</code>，Jupyter
Notebook本质上也是Python，Python有很多第三方库软件包的支持，网上也有很多的教程，可以画出一些“高大上”的图，在机器学习和数据分析这两方面也有着得天独厚的优势，在这里我分享几个常用的库：</p>
<blockquote>
<ol type="1">
<li>numpy</li>
<li>matplotlib</li>
<li>pandas</li>
</ol>
</blockquote>
<p>这些库不管是用来做数据分析或者画图都很有用，网上也有很多的教程，在这里就不过多赘述了。</p>
<h3 id="关于建模">关于建模</h3>
<p>建模手主要还是得了解各种<code>模型</code>：</p>
<blockquote>
<p>优化模型</p>
<p>预测模型</p>
<p>分类模型</p>
<p>评价模型</p>
<p>······</p>
</blockquote>
<p>我们的建模手是跟着B站的<code>数学建模清风</code>在学，感觉还挺不错的，经典的模型一定要懂，也要多看看O奖论文，其实很多O奖论文的模型看似高大上，其实也只是高级套皮而已，我们只需要在比赛的时候现学现卖就行。</p>
<h3 id="关于论文">关于论文</h3>
<p>论文写作工具可以用<code>Word</code>，也有不少人推荐使用<code>Latex</code>，本次比赛里我使用了Word进行写作，我来讲讲这两个工具各自的优点：</p>
<p><strong>Word</strong></p>
<blockquote>
<ol type="1">
<li>上手快，所见及所得</li>
<li>功能强大，基本上你的要求它都可以满足</li>
<li>教程十分多，不懂的上网都能查得到</li>
</ol>
</blockquote>
<p><strong>Latex</strong></p>
<blockquote>
<ol type="1">
<li>不需要自己排版</li>
<li>排版美观</li>
</ol>
</blockquote>
<p>这两个工具可以自行选择，Latex麻烦的一点就是需要会编程语言，学习成本大，不能可视化。不过现在也有能让Latex可视化的网站，感觉还挺好。这次比赛我用的是Word，因为有模版，用起来还是很顺手的。</p>
<p>英文写作的话我们这次完全使用的<code>有道翻译</code>进行机翻，正确率还是很高的，不过翻完还是得自己看一下表达的意思对不对。其余的话我也推荐<code>谷歌翻译</code>，<code>DeepL</code>，翻译文献的话用<code>知云文献翻译</code>，当然还有一个人工智能，懂得都懂，这里不多说。</p>
<h1 id="赛中">赛中</h1>
<p>经历这次比赛，我觉得<code>时间分配</code>还是十分重要的，这次我们选择了E题，我想也是最多人选择的一题。但在做第一问的时候建模手卡住了，导致论文手也在坐牢，做出第一问已经是比赛的第三天了，导致后面的流程就很紧张，还好最后是顺利完成了。</p>
<p>关于比赛中网上一些提供思路的或者卖思路的，我觉得看看就好，他们弄的或许看上去做的很对，但也有可能有致命漏洞，自己参加的比赛终究还是靠自己。</p>
<p>这次最让我们感到坐牢的可能还是数据的查找，国内的网站几乎不会有特别符合题目需求的数据，这时候就需要翻墙到外网看看，墙外的世界还是很明朗的</p>
<p>可能队友会在一些问题上产生分歧，就像这次比赛时我们组员也对美国的GDP和中国的GDP不能直接换算进行了争吵，我的评价是最好还是能控制情绪，用愉快的氛围进行比赛，弄的太紧张了也不好，必要的时候做出一些退步。</p>
<h1 id="总结">总结</h1>
<p>这次比赛也算是我大学生涯中参加的第一次比较重大的比赛，总的来说还是很有收获的，两个队友也挺靠谱的，是一段珍贵的经历。</p>
]]></content>
      <categories>
        <category>学科</category>
        <category>数学建模</category>
      </categories>
      <tags>
        <tag>美赛</tag>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub成就徽章全攻略（GitHub Achievements）</title>
    <url>/2023/09/08/2023/GitHub%E6%88%90%E5%B0%B1%E5%BE%BD%E7%AB%A0%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%88GitHub-Achievements%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>将各种资料整理了一下</p>
</blockquote>
<span id="more"></span>
<h2 id="成就列表">成就列表</h2>
<table>
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">徽章</th>
<th style="text-align: center;">名称</th>
<th style="text-align: center;">获取方式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/849459ac06f88476872e568dd15038ff92463b56b6c1d881eba4768c3c99f952/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/849459ac06f88476872e568dd15038ff92463b56b6c1d881eba4768c3c99f952/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d64656661756c742e706e67"
alt="Achievement badge Heart On Your Sleeve" /></a></td>
<td style="text-align: center;"><strong>Heart On Your
Sleeve</strong><br /><strong>（真情流露）</strong></td>
<td style="text-align: center;">用❤️表情符号对GitHub上的一些事情做出反应
<br /><strong>(测试中)</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/52c99599bf3ab70e329e1bdadc0fe81be0ec027fce4ec29e1ba77d4cae3ec38e/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/52c99599bf3ab70e329e1bdadc0fe81be0ec027fce4ec29e1ba77d4cae3ec38e/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d64656661756c742e706e67"
alt="Achievement badge Open Sourcerer" /></a></td>
<td style="text-align: center;"><strong>Open
Sourcerer</strong><br /><strong>（开放搜索）</strong></td>
<td style="text-align: center;">用户将PRs合并到多个公开仓库中
<br /><strong>(测试中)</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"
alt="Achievement badge Starstruck" /></a></td>
<td
style="text-align: center;"><strong>Starstruck</strong><br /><strong>（追星族）</strong></td>
<td style="text-align: center;">个人项目取得 <strong>16
stars</strong>及以上</td>
</tr>
<tr class="even">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/f1609e8e2b3083f5210bbf4a81dc33a2b31cfd964f256caddfcfe278a702b420/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/f1609e8e2b3083f5210bbf4a81dc33a2b31cfd964f256caddfcfe278a702b420/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742e706e67"
alt="Achievement badge Quickdraw" /></a></td>
<td
style="text-align: center;"><strong>Quickdraw</strong><br /><strong>(速成)</strong></td>
<td style="text-align: center;">提交 <strong>issue / PR</strong> 并在
<strong>5 分钟</strong> 之内关掉</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/93a470d9cb4e7f8116d53a6f6e9a75c57d0359af59d8efa0b966ec11099db35f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/93a470d9cb4e7f8116d53a6f6e9a75c57d0359af59d8efa0b966ec11099db35f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d64656661756c742e706e67"
alt="Achievement badge Pair Extraordinaire" /></a></td>
<td style="text-align: center;"><strong>Pair
Extraordinaire</strong><br /><strong>（优秀配对）</strong></td>
<td style="text-align: center;">在一次 <strong>PR (pull
Request)</strong> 中与别人共同提交</td>
</tr>
<tr class="even">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/d4a52cfb3181d13b7a8267394f66299c39d3c9c1da254f6beea092af1c755cca/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/d4a52cfb3181d13b7a8267394f66299c39d3c9c1da254f6beea092af1c755cca/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d64656661756c742e706e67"
alt="Achievement badge Pull Shark" /></a></td>
<td style="text-align: center;"><strong>Pull
Shark</strong><br /><strong>（鲨鱼拉拉）</strong></td>
<td style="text-align: center;">提交的 <strong>PR</strong> 被兼并
<strong>2</strong> 次及以上</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/e6ce6ebed3ad198195acd59354be6eca03cc9568f9ce27db365b1504bb92e123/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/e6ce6ebed3ad198195acd59354be6eca03cc9568f9ce27db365b1504bb92e123/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d64656661756c742e706e67"
alt="Achievement badge Galaxy Brain" /></a></td>
<td style="text-align: center;"><strong>Galaxy
Brain</strong><br /><strong>（银河之脑）</strong></td>
<td
style="text-align: center;">回复别人的<strong>discussion</strong>并被<strong>mark</strong>为答案<strong>2</strong>次</td>
</tr>
<tr class="even">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/988603b9bc6683c1728f665e6c97539f6a3d7c7cced12c72c81731e7deb0398f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f796f6c6f2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/988603b9bc6683c1728f665e6c97539f6a3d7c7cced12c72c81731e7deb0398f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f796f6c6f2d64656661756c742e706e67"
alt="Achievement badge YOLO" /></a></td>
<td
style="text-align: center;"><strong>YOLO</strong><br /><strong>（大胆去做）</strong></td>
<td
style="text-align: center;"><strong>Merge</strong>未经审查的<strong>PR</strong>
（耻辱之章🤣）</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/84493db1ea8f017b17254903b5a4e01bf621a7e235413dd4e8ec7ca2b2b494a3/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7075626c69632d73706f6e736f722d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/84493db1ea8f017b17254903b5a4e01bf621a7e235413dd4e8ec7ca2b2b494a3/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7075626c69632d73706f6e736f722d64656661756c742e706e67"
alt="Achievement badge Public Sponsor" /></a></td>
<td style="text-align: center;"><strong>Public
Sponsor</strong><br /><strong>（公共赞助商）</strong></td>
<td style="text-align: center;">通过 <a
href="https://github.com/sponsors">GitHub Sponsors</a>赞助开源工作</td>
</tr>
<tr class="even">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/50545617a2406472c9425cae4c9b5d20fd0da3f43a658c889bb4082e1b5a1e8b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6d6172732d323032302d636f6e7472696275746f722d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/50545617a2406472c9425cae4c9b5d20fd0da3f43a658c889bb4082e1b5a1e8b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6d6172732d323032302d636f6e7472696275746f722d64656661756c742e706e67"
alt="Achievement badge Mars 2020 Contributor" /></a></td>
<td style="text-align: center;"><strong>Mars 2020
Contributor</strong><br /><strong>（2020火星计划贡献者）</strong></td>
<td style="text-align: center;">为 <a
href="https://github.com/readme/featured/nasa-ingenuity-helicopter">Mars
2020 Helicopter Mission</a>贡献代码<br /><strong>（绝版）</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/87254f3e7cbfae66011faddb066d019e7dc77f286e4a8286a55cad7d2c81b449/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6172637469632d636f64652d7661756c742d636f6e7472696275746f722d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/87254f3e7cbfae66011faddb066d019e7dc77f286e4a8286a55cad7d2c81b449/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6172637469632d636f64652d7661756c742d636f6e7472696275746f722d64656661756c742e706e67"
alt="Achievement badge 2020 GitHub Archive Program" /></a></td>
<td style="text-align: center;"><strong>Arctic Code Vault
Contributor</strong><br /><strong>（北极代码贡献者）</strong></td>
<td style="text-align: center;">为 <a
href="https://archiveprogram.github.com/">2020 GitHub Archive
Program</a>贡献代码<br /><strong>（绝版）</strong></td>
</tr>
</tbody>
</table>
<h2 id="徽章等级">徽章等级</h2>
<p>一些徽章可以提升等级，不同等级有不同的图案</p>
<table>
<colgroup>
<col style="width: 16%" />
<col style="width: 20%" />
<col style="width: 20%" />
<col style="width: 20%" />
<col style="width: 20%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">成就</th>
<th style="text-align: center;">默认</th>
<th style="text-align: center;">铜</th>
<th style="text-align: center;">银</th>
<th style="text-align: center;">金</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td
style="text-align: center;"><strong>Starstruck</strong><br /><strong>（追星族）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"
alt="Achievement badge Starstruck" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/16bdb4fe26890a63d9b9e7dddf91b5b9412f1739536491064ec8a93bb22a9566/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/16bdb4fe26890a63d9b9e7dddf91b5b9412f1739536491064ec8a93bb22a9566/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d62726f6e7a652e706e67"
alt="Bronze badge Starstruck" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/77926f1d9649767505abef5a38570dd034baa8b53b37c793cbe1859462cd2eb8/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/77926f1d9649767505abef5a38570dd034baa8b53b37c793cbe1859462cd2eb8/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d73696c7665722e706e67"
alt="Silver badge Starstruck" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/b229590b555b870fdef6df68f89685248ac4b11b0c99303c01dc3eb73d91a3c1/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/b229590b555b870fdef6df68f89685248ac4b11b0c99303c01dc3eb73d91a3c1/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d676f6c642e706e67"
alt="Gold badge Starstruck" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">16 stars</td>
<td style="text-align: center;">128 stars</td>
<td style="text-align: center;">512 stars</td>
<td style="text-align: center;">4096 stars</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><strong>Pair
Extraordinaire</strong><br /><strong>（优秀配对）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/93a470d9cb4e7f8116d53a6f6e9a75c57d0359af59d8efa0b966ec11099db35f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/93a470d9cb4e7f8116d53a6f6e9a75c57d0359af59d8efa0b966ec11099db35f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d64656661756c742e706e67"
alt="Achievement badge Pair Extraordinaire" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/9021c7148e9a63787fe02e923bbda4bbaa2c2693ecf182950fdaf3f372781e90/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/9021c7148e9a63787fe02e923bbda4bbaa2c2693ecf182950fdaf3f372781e90/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d62726f6e7a652e706e67"
alt="Bronze badge Pair Extraordinaire" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/3a627e47c3de6a2a35f6b7568f59593ca62c3079a5fba6d35da10a319a02b752/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/3a627e47c3de6a2a35f6b7568f59593ca62c3079a5fba6d35da10a319a02b752/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d73696c7665722e706e67"
alt="Silver badge Pair Extraordinaire" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/283629e271c7ac1eb4e1be65627ebb9a7d6f9e0867e86c94c91bf32eb08940ad/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/283629e271c7ac1eb4e1be65627ebb9a7d6f9e0867e86c94c91bf32eb08940ad/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f706169722d65787472616f7264696e616972652d676f6c642e706e67"
alt="Gold badge Pair Extraordinaire" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">1 pull requests</td>
<td style="text-align: center;">10 pull requests</td>
<td style="text-align: center;">24 pull requests</td>
<td style="text-align: center;">48 pull requests</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><strong>Pull
Shark</strong><br /><strong>（鲨鱼拉拉）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/d4a52cfb3181d13b7a8267394f66299c39d3c9c1da254f6beea092af1c755cca/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/d4a52cfb3181d13b7a8267394f66299c39d3c9c1da254f6beea092af1c755cca/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d64656661756c742e706e67"
alt="Achievement badge Pull Shark" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/dd1a16203414cfce058a25d1a3a66a49bb5be45012a8b7fb82652ad3328378bf/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/dd1a16203414cfce058a25d1a3a66a49bb5be45012a8b7fb82652ad3328378bf/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d62726f6e7a652e706e67"
alt="Bronze badge Pull Shark" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/4213d091e09c46ba8729bc085b9eefc815d516a09e02c90c22c6a8e5eedb0f80/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/4213d091e09c46ba8729bc085b9eefc815d516a09e02c90c22c6a8e5eedb0f80/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d73696c7665722e706e67"
alt="Silver badge Pull Shark" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/5bd00fa9303c0eff492cb247f636dde135bd729946fda4db71969b72aa74e076/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/5bd00fa9303c0eff492cb247f636dde135bd729946fda4db71969b72aa74e076/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f70756c6c2d736861726b2d676f6c642e706e67"
alt="Gold badge Pull Shark" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">2 pull requests</td>
<td style="text-align: center;">16 pull requests</td>
<td style="text-align: center;">128 pull requests</td>
<td style="text-align: center;">1024 pull requests</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><strong>Galaxy
Brain</strong><br /><strong>（银河之脑）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/e6ce6ebed3ad198195acd59354be6eca03cc9568f9ce27db365b1504bb92e123/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/e6ce6ebed3ad198195acd59354be6eca03cc9568f9ce27db365b1504bb92e123/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d64656661756c742e706e67"
alt="Achievement badge Galaxy Brain" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/25524aaa1ecffdc244058957db8191eee86d7ca30392829e5239b52d8b6400b7/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/25524aaa1ecffdc244058957db8191eee86d7ca30392829e5239b52d8b6400b7/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d62726f6e7a652e706e67"
alt="Bronze badge Galaxy Brain" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/b48c2481d0974d6c1c836bf27885549464a8535f71c28b9c9cd40a73697f5bd5/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/b48c2481d0974d6c1c836bf27885549464a8535f71c28b9c9cd40a73697f5bd5/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d73696c7665722e706e67"
alt="Silver badge Galaxy Brain" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/670c92db3207068024ad02f0327a1974fd5c8226304b4c3a6faccaf263a5361f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/670c92db3207068024ad02f0327a1974fd5c8226304b4c3a6faccaf263a5361f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f67616c6178792d627261696e2d676f6c642e706e67"
alt="Gold badge Galaxy Brain" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">2 answers</td>
<td style="text-align: center;">8 answers</td>
<td style="text-align: center;">16 answers</td>
<td style="text-align: center;">32 answers</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><strong>Heart On Your
Sleeve</strong><br /><strong>（真情流露）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/849459ac06f88476872e568dd15038ff92463b56b6c1d881eba4768c3c99f952/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/849459ac06f88476872e568dd15038ff92463b56b6c1d881eba4768c3c99f952/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d64656661756c742e706e67"
alt="Achievement badge Heart On Your Sleeve" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/cee7d1fb05831953ff5b74952a71bcf0bf18c4cbddc18fa0b4b32e52e01b4bf6/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/cee7d1fb05831953ff5b74952a71bcf0bf18c4cbddc18fa0b4b32e52e01b4bf6/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d62726f6e7a652e706e67"
alt="Bronze badge Heart On Your Sleeve" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/326a859ff23caa577676ed750a85d083381d415f6304faa79408976f979e0d9b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/326a859ff23caa577676ed750a85d083381d415f6304faa79408976f979e0d9b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d73696c7665722e706e67"
alt="Silver badge Heart On Your Sleeve" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/28e81dd97098bd8b31dfdd5901ff4e9d99d889baf6fe2910201d02f4a89077f3/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/28e81dd97098bd8b31dfdd5901ff4e9d99d889baf6fe2910201d02f4a89077f3/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f68656172742d6f6e2d796f75722d736c656576652d676f6c642e706e67"
alt="Gold badge Heart On Your Sleeve" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><strong>Open
Sourcerer</strong><br /><strong>（开放搜索）</strong></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/52c99599bf3ab70e329e1bdadc0fe81be0ec027fce4ec29e1ba77d4cae3ec38e/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/52c99599bf3ab70e329e1bdadc0fe81be0ec027fce4ec29e1ba77d4cae3ec38e/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d64656661756c742e706e67"
alt="Achievement badge Open Sourcerer" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/a299c8e212b0838191281400a176e0d34df873f4c7b0275e6ca958f73c11e6c4/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d62726f6e7a652e706e67"><img
src="https://camo.githubusercontent.com/a299c8e212b0838191281400a176e0d34df873f4c7b0275e6ca958f73c11e6c4/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d62726f6e7a652e706e67"
alt="Bronze badge Open Sourcerer" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/5de4cc7d7eeea80d20b9384313e4034f438c92aca079f2f04eefc46ae6cbc967/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d73696c7665722e706e67"><img
src="https://camo.githubusercontent.com/5de4cc7d7eeea80d20b9384313e4034f438c92aca079f2f04eefc46ae6cbc967/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d73696c7665722e706e67"
alt="Silver badge Open Sourcerer" /></a></td>
<td style="text-align: center;"><a
href="https://camo.githubusercontent.com/1be237d8628c5db6d24211f4205c300522d1eaecdb3d6ab5c3bf3e67527007cf/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d676f6c642e706e67"><img
src="https://camo.githubusercontent.com/1be237d8628c5db6d24211f4205c300522d1eaecdb3d6ab5c3bf3e67527007cf/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f6f70656e2d736f757263657265722d676f6c642e706e67"
alt="Gold badge Open Sourcerer" /></a></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
<td style="text-align: center;">???</td>
</tr>
</tbody>
</table>
<h2 id="徽章皮肤">徽章皮肤</h2>
<p>一些成就的外观取决于你的<strong>表情符号</strong>肤色偏好</p>
<p>你可以在 <a href="https://github.com/settings/appearance">appearance
settings</a>修改你的偏好</p>
<table>
<colgroup>
<col style="width: 8%" />
<col style="width: 15%" />
<col style="width: 15%" />
<col style="width: 15%" />
<col style="width: 15%" />
<col style="width: 15%" />
<col style="width: 15%" />
</colgroup>
<thead>
<tr class="header">
<th><strong>徽章</strong></th>
<th>👋</th>
<th>👋🏻</th>
<th>👋🏼</th>
<th>👋🏽</th>
<th>👋🏾</th>
<th>👋🏿</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Starstruck</strong><br /><strong>（追星族）</strong></td>
<td><a
href="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/98e693d243cde46579166501d14a9259daa92de146d9ba7d6af25255c4707974/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742e706e67"
alt="Default skin tone of Starstruck" /></a></td>
<td><a
href="https://camo.githubusercontent.com/7f5af5adb497a801ddc9ad6ba8b1bf16a487cf46fb2dd7651a8188383d041697/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6c696768742e706e67"><img
src="https://camo.githubusercontent.com/7f5af5adb497a801ddc9ad6ba8b1bf16a487cf46fb2dd7651a8188383d041697/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6c696768742e706e67"
alt="Light skin tone of Starstruck" /></a></td>
<td><a
href="https://camo.githubusercontent.com/26ed2e3356c3268e51f04ae88c88818fa2d77bec49b5f36e17fec2570b473a53/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6c696768742d6d656469756d2e706e67"><img
src="https://camo.githubusercontent.com/26ed2e3356c3268e51f04ae88c88818fa2d77bec49b5f36e17fec2570b473a53/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6c696768742d6d656469756d2e706e67"
alt="Light-medium skin tone of Starstruck" /></a></td>
<td><a
href="https://camo.githubusercontent.com/0ef6b3bf8ad252138e20ebfe6e7e60a95fc5dbe6648f6fc364069758ef42e66c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6d656469756d2e706e67"><img
src="https://camo.githubusercontent.com/0ef6b3bf8ad252138e20ebfe6e7e60a95fc5dbe6648f6fc364069758ef42e66c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6d656469756d2e706e67"
alt="Medium skin tone of Starstruck" /></a></td>
<td><a
href="https://camo.githubusercontent.com/f6e8547bd35aa3af75753edd38a6add5e08da08c58e56a725d75a9f3447e30b6/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6d656469756d2d6461726b2e706e67"><img
src="https://camo.githubusercontent.com/f6e8547bd35aa3af75753edd38a6add5e08da08c58e56a725d75a9f3447e30b6/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6d656469756d2d6461726b2e706e67"
alt="Medium-dark skin tone of Starstruck" /></a></td>
<td><a
href="https://camo.githubusercontent.com/8f121e9fbc3ca6cb2da99f2c1169c8d0aa0b458194c727ef707af7d02d2fbb8c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6461726b2e706e67"><img
src="https://camo.githubusercontent.com/8f121e9fbc3ca6cb2da99f2c1169c8d0aa0b458194c727ef707af7d02d2fbb8c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f7374617273747275636b2d64656661756c742d2d6461726b2e706e67"
alt="Dark skin tone of Starstruck" /></a></td>
</tr>
<tr class="even">
<td><strong>Quickdraw</strong><br /><strong>（速成）</strong></td>
<td><a
href="https://camo.githubusercontent.com/f1609e8e2b3083f5210bbf4a81dc33a2b31cfd964f256caddfcfe278a702b420/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742e706e67"><img
src="https://camo.githubusercontent.com/f1609e8e2b3083f5210bbf4a81dc33a2b31cfd964f256caddfcfe278a702b420/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742e706e67"
alt="Default skin tone of Quickdraw" /></a></td>
<td><a
href="https://camo.githubusercontent.com/1d62914a828cfaab99381c00bc8a9b41929f48b5ef02fdf69b62248cb828ec9c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6c696768742e706e67"><img
src="https://camo.githubusercontent.com/1d62914a828cfaab99381c00bc8a9b41929f48b5ef02fdf69b62248cb828ec9c/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6c696768742e706e67"
alt="Light skin tone of Quickdraw" /></a></td>
<td><a
href="https://camo.githubusercontent.com/676a12013829d69ab7732d6cf744012447da573efcd980c2adad92906d88d371/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6c696768742d6d656469756d2e706e67"><img
src="https://camo.githubusercontent.com/676a12013829d69ab7732d6cf744012447da573efcd980c2adad92906d88d371/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6c696768742d6d656469756d2e706e67"
alt="Light-medium skin tone of Quickdraw" /></a></td>
<td><a
href="https://camo.githubusercontent.com/8503450b76d881d6fc122cb4840e01e19f7fb2edc964cc6abf13940b44a92eb7/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6d656469756d2e706e67"><img
src="https://camo.githubusercontent.com/8503450b76d881d6fc122cb4840e01e19f7fb2edc964cc6abf13940b44a92eb7/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6d656469756d2e706e67"
alt="Medium skin tone of Quickdraw" /></a></td>
<td><a
href="https://camo.githubusercontent.com/94f6732d580f5ce8e6043535a5fdd3902465d3afa80c72850e2e9702f5672cb8/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6d656469756d2d6461726b2e706e67"><img
src="https://camo.githubusercontent.com/94f6732d580f5ce8e6043535a5fdd3902465d3afa80c72850e2e9702f5672cb8/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6d656469756d2d6461726b2e706e67"
alt="Medium-dark skin tone of Quickdraw" /></a></td>
<td><a
href="https://camo.githubusercontent.com/8e9f3e39ae34c0a035fb98c68483ce259d342669692db76fc35907e6b84e9748/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6461726b2e706e67"><img
src="https://camo.githubusercontent.com/8e9f3e39ae34c0a035fb98c68483ce259d342669692db76fc35907e6b84e9748/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f70726f66696c652f616368696576656d656e74732f717569636b647261772d64656661756c742d2d6461726b2e706e67"
alt="Dark skin tone of Quickdraw" /></a></td>
</tr>
</tbody>
</table>
<blockquote>
<p>参考资料：</p>
<p>https://github.com/github-profile-achievements/english</p>
<p>https://www.6hu.cc/archives/59570.html</p>
<p>https://github.com/jhonywalkeer/github-achivements</p>
</blockquote>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Taihub分享</title>
    <url>/2023/02/01/2023/Taihub%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<blockquote>
<p>关于泰的一切</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/IMG_1790.PNG" alt="IMG_1790" style="zoom: 25%;" /></p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>孝泰是由2021年夏天一个视频引发的小众亚文化圈子，发展至今，已诞生了多数优秀的作品。在这里我进行了不完全的整理并放在了网盘上，请自行取用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/IMG_1790.PNG" alt="IMG_1790" style="zoom: 25%;" /></p>
<h1 id="链接">链接</h1>
<p>https://pan.baidu.com/s/1IqRYFEZJGfA_Bg0yNdBY5w?pwd=6sa7
提取码：6sa7</p>
<h1 id="使用须知">使用须知</h1>
<p>正作是tai原素材包含视频和图片多数来源于cj 番外是tai整活视频
DLC是tai整活图片 借物表不填写⚪ 二配允许⚪ 修改允许⚪ 商用不允许×
R18不允许×</p>
<h1 id="补档">补档</h1>
<h2 id="补档1">补档1</h2>
<p>​
孝泰为什么是神？在谈论这个问题之前，我想先说说其他梗王相较于孝泰究竟差在了哪里</p>
<h3 id="首先是犯下傲慢之罪的哲学众将">首先是犯下傲慢之罪的哲学众将</h3>
<p>​
凭着niconico留下来的热度，在B站掀起一波腥风血雨，这种亚文化梗注定走不长远，事实也是如此，18年被B站制裁了之后就泯然众人，仅维持着一点热度。与之相比神就很谦卑，嘞个mang，李个逼都是神留给凡人的慈悲，神不是没有好的口头禅，只是不想通过太完美的言语让大家折服而故意不用，可笑有些人不理解神的良苦用心，竟然还用这些事来讥讽神，我劝你们好自为之。</p>
<h3 id="然后是犯下愤怒之罪的虎哥">然后是犯下愤怒之罪的虎哥</h3>
<p>​
因为杀马特团长与其的口角争斗，就愤怒地与团长进行约战，违背了神在《新约》中的一句话:“还森两百多天吧，我的话就似想和大家缩，尽力zhuo到坠好的自己吧。”于是神降下了他的惩罚，虎哥不见踪影，落寞生活。</p>
<h3 id="接着是犯下懒惰之罪的初音">接着是犯下懒惰之罪的初音</h3>
<p>​
自以为拿下几个畅销冠军就了不起了，自创歌姬计划。另外大家有所不知，其实每次初音发歌前，初音闭上眼睛做冥想的时候，其脑海中看见的画面，正是站在光芒之中的孝泰，那时神告诉她：“李只可到这里，不可越过。”然而，神的劝说不但没有让初音迷途知返，竟敢还不断发游戏发周边正面挑战神的威严，于是神降下了他的惩罚，初音热度渐渐下降，从公主殿下变成了葱。</p>
<h3 id="再然后是犯下了嫉妒之罪的子润">再然后是犯下了嫉妒之罪的子润</h3>
<p>​
热度屡次被神击败，但口服心不服的子润，暗中嫉妒着神，甚至胆敢在赵睿英面前挑明和张国的关系。于是，在含金量更高的热度对决，即处男帮里，子润被孝泰正面击溃。不过，念在都是一个班的份上，并且践行了神的意志吸引力屡次吼神的赵睿英的火力后，神应许了他在一班的一切。</p>
<h3 id="犯下贪婪之罪的刘华强">犯下贪婪之罪的刘华强</h3>
<p>​
只是部老剧，华强就夺得了2021年B站热度榜单，而这，自然是因为神的应许。神本来钦定他为自己在人间的代言人，在自己热度下去后替自己继续火热全网，为此甚至不惜亲自为华强铺路，主动退出B站圈，将一切荣耀都归给他，甚至应许他可以带走自己最爱的瓜。但最后华强却被利益蒙蔽了双眼，不再以践行神的理想为自己的理想，也不再聆听神的教诲，甚至自以荣光已经超过了神，竟允许粉丝P出孝泰卖瓜这种亵渎神尊严的图片，于是神降下了惩罚，华强从此不再正常并且拥有各种形态，而他的电瓶车将再也不能载起他最初的梦想，他的刀再也不能正常地劈瓜，他的瓜摊老板再也不能正常地发觉不对劲。</p>
<h3 id="犯下暴食之罪的嘉然">犯下暴食之罪的嘉然</h3>
<p>​
在神子华强开始堕落之后，神开始寻找下一个代言人，这一次，他选中了嘉然。相较于神，嘉然无疑是不完美的，他没有神足以让众人沦陷的样貌，也没有神深不见底的名句池，舍我其谁的胆气，敏锐的词汇选择，无懈可击的步伐，但神将自己最虔诚，同时也是实力最强大的两位泰心糖暂时交给了她，并复刻了为华强的铺路操作，但由于高考的事，神认为或许是自己给的压力过大才导致了华强的堕落，于是这一次神选择了去南通，减少嘉然的心理负担，最终，嘉然成功了。然而，获得热度的嘉然不但冒大不韪给两位泰心糖新的称号嘉心糖，更妄图染指神力，只是她错误地认为身的力量来源于语言的步伐，最终她也因此犯下了暴食之罪，并得到了一大推屁用没有的嘉心糖。</p>
<h3 id="最后犯下淫欲之罪的吴乘风">最后，犯下淫欲之罪的吴乘风</h3>
<p>​
2021暑假之后，神已经非常虚弱了，原神用氪金系统吸走了神的精气，神已经无力再惩罚嘉然，只有两位信徒依旧在维护神的尊严而已。此刻已经决心退隐的神在最后依然心系苏州，于是他选中了第三位神子——吴乘风。作为第三任神子，吴乘风很好地维护了神的尊严，但接连击溃鼓楼的窑子后，吴乘风遇到了石佛寺三宫四十八号的浦口淫魔，被吸走了神赋予自己的力量，于是在班干竞选中节节败退，最终泯然众人，活在男人窝中。</p>
<h2 id="补档2">补档2</h2>
<p>​
2021年的最后一个16号已经过去一天，孝泰的补档已成终章，不管是好活还是烂活，重要的是慢慢的，大家，把所谓的烂活，好活……讲成了一个故事，变成了一种艺术。朦胧的感觉，迷茫的感觉，大家最初单纯只是喜欢恶搞，喜欢玩乐，渐渐的渐渐的喜欢上了孝泰的真实。
不真实的，真实</p>
<p>​
那些视频我看了不下50次，最初点进去是抱着无厘头的态度看一个搞笑的抽象作品的，可没想到我被彻底的震撼到了，忍不住的看了一次又一次。</p>
<p>​
多年前模糊的画质，夏日漱石的配乐，王家卫文艺的台词，孝泰荒诞行为的画面。这一切听起来不可思议甚至有些魔幻的组合却拼接的是那么的恰到好处，想要赋予视频意义的同时又在鼓励观众尝试解构一帧帧画面。</p>
<p>​
狭窄的房间，失意的男人，狂乱的肢体动作，整部作品都旨在表达一种荒谬感，一种充斥着整个人类历史的荒诞无稽。这里没有什么东西是有价值可言的，宇宙冷漠而荒谬，而人在真正面对它时，一切的现实和理智都将崩溃</p>
<p>​ 我愿称之为荒诞浪漫主义的开端，甚至将引领一段不可思议的潮流。</p>
<p>你问我什么是荒诞浪漫主义？ 是莫扎特谱写的朋克摇滚乐，
是梵高画出的二次元美少女， 是曹雪芹写下的凡人修仙传，
是李白导演出的商业谍战片， 是方文山创作出的让子弹飞，
是和孝泰度过的那一个夏天。</p>
<p>​
今天是17号。我错过了16号的补档，正如我错过了那个夏天。还记得第一次看完了视频，我惊讶于孝泰的舞蹈，看完了评论，我想哭，我想笑，我想此刻在寒冷的的冬天穿着短袖去操场上跑圈，我想和视频里的孝泰一样做一些荒诞又浪漫的事情，我想有一个无悔的青春。我想说很多话，我想做很多事，可是到最后什么也没说，什么也没做。我羡慕孝泰，真的，他把生活过成了戏剧，又在每个16号都被常常记起，当没有人再放这些视频的时候，当孝泰被科技城遗忘的时候，孝泰才能真正活在南通吧</p>
<h2 id="补档3">补档3</h2>
<p>是枕绿色围巾孝泰的睡姿 是上课孝泰不断闭眼点头 是红衣孝泰李个逼的声波
是孝泰蓝色三叶草T恤衫 是体育馆孝泰飞出的鞋垫 是丝滑无法复制孝泰转身
是钉钉视频孝泰蓝刨冰机 是一张张照片孝泰的中指 是孝泰经典套司波登大衣
是羽毛球馆孝泰梦幻脚步 是孝泰气喘喘的相当不绰 是孝泰撑起来的零号特工
是还森两百多天南大孝泰 是通大电科孝泰五天早八 是不可能被五等分的孝泰</p>
<h2 id="补档4">补档4</h2>
<p>我好想做孝泰的狗啊。</p>
<p>可是孝泰说他喜欢的是他小弟，我哭了。</p>
<p>我知道既不是狗也不是小弟的我为什么要哭的。因为我其实是他的同学。</p>
<p>我从没奢望孝泰能看一眼自己。我明白的，所有人都喜欢理解余裕上手天才打钱的萌萌的狗狗或者小弟，没有人会喜欢只会躲在阴暗角落的同学。</p>
<p>但我还是问了孝泰:“我能不能做你的狗？”</p>
<p>我知道我是注定做不了狗的。但如果他喜欢狗，我就可以一直在身边看着他了，哪怕她怀里抱着的永远都是狗。</p>
<p>可是他说喜欢的是他小弟。</p>
<p>他现在还能看我，还在和我说话，是因为他小弟还没有出现，只有我这同学每天蹑手蹑脚地从阴暗角落里爬出来，远远地和他对视。</p>
<p>等他喜欢的小弟来了的时候，我就该重新滚回我的座位了吧。</p>
<p>但我还是好仰慕他，他能在我还在他身边的时候多看我几眼吗？</p>
<p>孝泰说接下来的每个圣诞夜都要和大家一起过。我不知道大家指哪些人。好希望这个集合能够对我做一次胞吞。</p>
<p>他小弟还在害怕孝泰。</p>
<p>我会去把他爱的小弟引来的。</p>
<p>我知道稍有不慎，我就会请他小弟吃某利来冰山熔岩蛋糕。</p>
<p>那时候孝泰大概会往我身上扔臭鸡蛋吧。</p>
<p>那我就成了贤蛋黄，嘻嘻。</p>
<p>我希望他能把我扔得近一点，因为我还是好仰慕他。会一直仰慕下去的。</p>
<p>我的灵魂透过窗户向里面看去，挂着的铃铛在轻轻鸣响，孝泰慵懒地靠在沙发上，表演得非常温顺的小弟坐在他的身旁。壁炉的火光照在他的脸庞，我冻僵的心脏在风里微微发烫。</p>
]]></content>
      <categories>
        <category>Tai</category>
      </categories>
      <tags>
        <tag>Tai</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言：驾驶员理论课程模拟考试与学习系统</title>
    <url>/2023/02/03/2023/C%E8%AF%AD%E8%A8%80%EF%BC%9A%E9%A9%BE%E9%A9%B6%E5%91%98%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B%E6%A8%A1%E6%8B%9F%E8%80%83%E8%AF%95%E4%B8%8E%E5%AD%A6%E4%B9%A0%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<blockquote>
<p>程序设计道路上的一点成果</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>这是大一下学期程序设计课程的内容，很好地锻炼了我的编程能力，放在这里以供学习。</p>
<h1 id="一课题内容和要求">一、课题内容和要求</h1>
<p>驾驶员理论课程模拟考试与学习系统是在Dev
C++编译环境下以C语言为编程语言编译完成的，为实现驾驶员科目一自主学习，查询知识和进行模拟考试的系统。同时为了方便驾校管理，加入了管理员模块，方便管理员对题库进行修改和编辑，同时，管理员可以为驾校员工添加新的管理员账户，普通用户可在注册后进入系统可进行自主训练，同时能在查看所有习题进行备考和进行错题重做。</p>
<h2 id="课题基本要求">课题基本要求：</h2>
<ul>
<li>提供管理员和用户菜单选项，分别进入不同权限界面；</li>
<li>进入管理员界面需要密码验证，管理员界面负责试题库的管理（修改、查询、删除、增加）以及考试成绩的统计等；</li>
<li>进入用户界面需要输入用户
ID，界面菜单选项具有错题、学习和测验等功能；</li>
<li>用文件保存试题库并可随时增加试题到试题库中；</li>
<li>用户可实现输入自己的答案，系统可根据用户答案与标准答案的对比实现判卷并给出成绩。</li>
</ul>
<h2 id="课题选做要求">课题选做要求：</h2>
<ul>
<li>引进错题系统，可以进行错题重做。</li>
<li>用户可查看所有题库并进行学习。</li>
<li>用户、管理员ID均相对独立，不可重复，减少管理困难。</li>
<li>拥有固定路径的资源库，方便后期对题库等内容进行优化和大面积的软件更新。</li>
</ul>
<h2 id="创新功能与特性">创新功能与特性：</h2>
<ul>
<li>用户每作答一题都会实时判断并给出实时分数，模拟真实考试场景。</li>
<li>管理员可以添加新的管理员。</li>
<li>参考微软等大型公司软件，界面在优化后更清晰整洁，全新的问候与提示语拉近用户距离感，提高用户使用体验。</li>
</ul>
<h1 id="二需求分析">二、需求分析</h1>
<ul>
<li>提供可操作的主菜单：输出菜单，用于显示以从文件中加载的总客户信息和若干个可选的功能选项。根据客户输入的选项来运行不同的功能，运行不同的函数。</li>
<li>用户主菜单和分菜单：用户主菜单提供注册和登录两个功能，适用于拥有和未拥有账号的用户进行相关操作。用户分菜单是用户主要功能菜单，负责提供用户所需的模拟测试，错题学习，知识学习功能的引导并实现相应跳转。</li>
<li>管理员主菜单，分菜单以及题库菜单：管理员主菜单适用于管理员登录，仅在资源库文本文件
admin.txt
中存储的管理员才可以进行登录。管理员分菜单为管理员提供给相应的功能，包括对成绩进行查看，添加新管理员，以及进入题库系统。题库菜单是题库系统的专用菜单，仅管理员才可以访问，它提供了对题目进行删除，增加，编辑等功能。</li>
</ul>
<h1 id="三概要设计"><strong>三、概要设计</strong></h1>
<p>主要存储结构</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Admin</span>               //管理员信息存储</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">       <span class="type">char</span> ID[<span class="number">20</span>];</span><br><span class="line">       <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">       <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">&#125;Admin;</span><br><span class="line">Admin admin[N];</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">User</span>                   //用户信息存储</span></span><br><span class="line"><span class="class"> </span></span><br><span class="line"><span class="class">       <span class="title">char</span> <span class="title">ID</span>[20];</span></span><br><span class="line">       <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">       <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">&#125;User;</span><br><span class="line">User user[N];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">a</span>               //试题的结构体</span></span><br><span class="line"><span class="class">&#123;</span>         </span><br><span class="line">       <span class="type">char</span> text[M][N];       <span class="comment">//存放试题</span></span><br><span class="line">       <span class="type">char</span> answer[M];       <span class="comment">//存放答案</span></span><br><span class="line">&#125; text_answer;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">userscore</span>          //用户成绩的结构体</span></span><br><span class="line"><span class="class">&#123;</span>               </span><br><span class="line">       <span class="type">int</span> userid;                         <span class="comment">//存放用户ID</span></span><br><span class="line">       <span class="type">char</span> username[<span class="number">20</span>];           <span class="comment">//存放用户名</span></span><br><span class="line">       <span class="type">int</span> score;              <span class="comment">//存放用户成绩</span></span><br><span class="line">       <span class="type">int</span> mistakes[M];</span><br><span class="line">&#125; SCORE;</span><br><span class="line">SCORE scores;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">usermis</span>            //用户成绩的结构体</span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">       <span class="type">int</span> userid;                         <span class="comment">//存放用户ID</span></span><br><span class="line">       <span class="type">char</span> username[<span class="number">20</span>];           <span class="comment">//存放用户名</span></span><br><span class="line">       <span class="type">int</span> mistakes[M];               <span class="comment">//存放用户错题题号</span></span><br><span class="line">&#125; MISTAKE;</span><br><span class="line">MISTAKE MIS;</span><br><span class="line"> </span><br><span class="line"><span class="number">2.</span>主要函数概要</span><br><span class="line"><span class="comment">//系统菜单部分</span></span><br><span class="line">voidMainM();              <span class="comment">//系统总菜单</span></span><br><span class="line"><span class="comment">//用户菜单部分</span></span><br><span class="line">voidUserSM();             <span class="comment">//用户主菜单(注册和登录)</span></span><br><span class="line">voidUserM();              <span class="comment">//用户菜单（知识学习，测验，错题查看，错题重做）</span></span><br><span class="line"><span class="comment">//管理员菜单部分</span></span><br><span class="line">voidAdminSM();           <span class="comment">//管理员总菜单（登录，添加管理员）</span></span><br><span class="line">voidAdminM();            <span class="comment">//管理员分菜单（题库，成绩管理）</span></span><br><span class="line">voidExerM();              <span class="comment">//题库管理菜单（包含增加，删减，编辑）</span></span><br><span class="line"><span class="comment">//用户函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">login</span><span class="params">()</span>;                           <span class="comment">//用户登录（ID 密码）、</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">regist</span><span class="params">()</span>;                         <span class="comment">//用户注册</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">product_random</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> a[])</span>;       <span class="comment">//题目随机生成</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> pja)</span>;                      <span class="comment">//考试模块函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">writescore</span><span class="params">(SCORE scores)</span>;          <span class="comment">//分数写入</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">writemis</span><span class="params">(SCORE scores,<span class="type">int</span> n)</span>;       <span class="comment">//错题写入</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Getmis</span><span class="params">(FILE *fp1,<span class="type">int</span> a[])</span>;            <span class="comment">//错题文件读取</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">moveToNextLine</span><span class="params">(FILE *fp)</span>;          <span class="comment">//文件内容扫描</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Getmistakes</span><span class="params">(MISTAKE MIS)</span>;       <span class="comment">//错题信息获取</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">mistest</span><span class="params">(<span class="type">int</span> n,MISTAKE MIS)</span>;       <span class="comment">//错题重做模块</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">studytest</span><span class="params">()</span>;                       <span class="comment">//学习系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">savefile</span><span class="params">()</span>;                        <span class="comment">//用户信息写入</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">readfile</span><span class="params">()</span>;                        <span class="comment">//用户信息读取</span></span><br><span class="line"><span class="comment">//管理员函数</span></span><br><span class="line">voidshowscore();                      <span class="comment">//分数查看</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addexe</span><span class="params">()</span>;                         <span class="comment">//题目增加</span></span><br><span class="line">voidadminregist();                     <span class="comment">//添加管理员</span></span><br><span class="line">voidadminsavefile();                   <span class="comment">//管理员信息写入</span></span><br><span class="line">voidadminreadfile();                   <span class="comment">//管理员信息读取</span></span><br><span class="line">voidadminlogin();                     <span class="comment">//管理员登录</span></span><br></pre></td></tr></table></figure>
<h1 id="四源程序代码">四、源程序代码</h1>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//maincontrol.c中的代码</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    MainM();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//user.c中的代码</span></span><br><span class="line"><span class="type">int</span> number=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> passwd[<span class="number">20</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> pja)</span></span><br><span class="line"> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> flag,n=<span class="number">0</span>,m;</span><br><span class="line">    text_answer a;</span><br><span class="line">    <span class="type">char</span> ch1,ans;</span><br><span class="line">    <span class="type">char</span> choice2;</span><br><span class="line">    FILE *fp,*fp1;</span><br><span class="line">    <span class="type">int</span> random[<span class="number">560</span>];</span><br><span class="line">    <span class="type">int</span> mis=<span class="number">0</span>,count=<span class="number">1</span>,right=<span class="number">0</span>,score=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> ((fp1=fopen(<span class="string">&quot;C:\\驾校系统资源库\\text.txt&quot;</span>,<span class="string">&quot;r&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line"> &#123; <span class="comment">//判断文件是否打开成功</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;嗯...试题库文件打开失败，请尝试联系管理员\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>((ch1=fgetc(fp1))!=EOF) </span><br><span class="line">&#123;                                       <span class="comment">//把题目放到数组中</span></span><br><span class="line">            <span class="keyword">if</span>(ch1==<span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ch1 &lt;= <span class="number">0</span> || (ch1 &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;9&#x27;</span>) || (ch1 &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;Z&#x27;</span>) || ch1 == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                <span class="comment">//把题目放到数组中，题目里的汉字在计算机存的码值小于0</span></span><br><span class="line">            &#123;</span><br><span class="line">                a.text[i][j++]=ch1;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ch1&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;ch1&lt;=<span class="string">&#x27;z&#x27;</span>)       <span class="comment">//把答案存到数组中</span></span><br><span class="line">                a.answer[k++]=ch1;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp1);                         <span class="comment">//关闭文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">560</span>;</span><br><span class="line">    m=<span class="number">100</span>;</span><br><span class="line">    product_random(i,random);                    <span class="comment">//将随机数放到数组中</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        flag=random[n++];                        <span class="comment">//随机抽题</span></span><br><span class="line">        <span class="keyword">if</span>((flag%<span class="number">5</span>)!=<span class="number">0</span>)。     <span class="comment">//判断随机数是否为5的倍数（题目的行号为5的倍数）</span></span><br><span class="line">            m++;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">Reanswer:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d.&quot;</span>,count);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">0</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);                        <span class="comment">//输出题目和选项</span></span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;                                               E.退出考试&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">3</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">4</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你选择：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ans);</span><br><span class="line">            <span class="keyword">if</span> (ans!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;B&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;C&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;D&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;E&#x27;</span>) </span><br><span class="line">&#123;                                                     <span class="comment">//判断输入的选项</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;你的选择无效，请重新作答\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span> Reanswer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (a.answer[flag/<span class="number">5</span>]==ans+<span class="number">32</span>) &#123;                 <span class="comment">//判断答案</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n选择正确\n\n&quot;</span>);</span><br><span class="line">                right++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ans==<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">Rechoose:</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;是否确认退出考试？\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A.是              B.否\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice2);</span><br><span class="line">                <span class="keyword">if</span> (choice2!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;choice2!=<span class="string">&#x27;B&#x27;</span>) </span><br><span class="line">&#123;                                                     <span class="comment">//判断输入的选项</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;你的选择无效，我们无法进行相应操作，请重新选择\n&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">goto</span> Rechoose;&#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span>  Reanswer;&#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n你的选择错误，正确答案为&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c\n\n&quot;</span>,a.answer[flag/<span class="number">5</span>]<span class="number">-32</span>);</span><br><span class="line">                scores.mistakes[mis++]=flag/<span class="number">5</span>;        <span class="comment">//将错题行数放入数组</span></span><br><span class="line">            &#125;</span><br><span class="line">            score=<span class="number">100</span>-mis;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;剩余%d道题目         当前分数%d分\n\n&quot;</span>,<span class="number">100</span>-count,score);</span><br><span class="line"><span class="comment">//输出剩余题目和当前分数</span></span><br><span class="line">            count++;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(--m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你的考试已结束，您的总分为%d分\n&quot;</span>,right);</span><br><span class="line">    scores.score=right;</span><br><span class="line">    scores.userid=((<span class="type">int</span>)user[pja].ID[<span class="number">0</span>]<span class="number">-48</span>)*<span class="number">10000</span>+((<span class="type">int</span>)user[pja].ID[<span class="number">1</span>]<span class="number">-48</span>)*<span class="number">1000</span>+((<span class="type">int</span>)user[pja].ID[<span class="number">2</span>]<span class="number">-48</span>)*<span class="number">100</span>+((<span class="type">int</span>)user[pja].ID[<span class="number">3</span>]<span class="number">-48</span>)*<span class="number">10</span>+((<span class="type">int</span>)user[pja].ID[<span class="number">4</span>]<span class="number">-48</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(scores.username,user[pja].name);</span><br><span class="line">    writescore(scores);</span><br><span class="line">    writemis(scores,mis);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你的错题已经记录，你可以进入错题系统查看\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;即将为你返回菜单界面\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    UserM();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">product_random</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> a[])</span> </span><br><span class="line">&#123;                                                      <span class="comment">//产生随机数并放进数组</span></span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; x; i++) &#123;</span><br><span class="line">        temp = rand() % x;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp == *(a + j)) &#123;</span><br><span class="line">                i--;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                *(a + i) = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">writescore</span><span class="params">(SCORE scores)</span> &#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">&quot;C:\\驾校系统资源库\\userscore.txt&quot;</span>,<span class="string">&quot;a+&quot;</span>))==<span class="literal">NULL</span>) </span><br><span class="line">&#123;                                                    <span class="comment">//判断文件是否打开成功</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;很抱歉，打开成绩记录文件失败，请尝试创建相关文件以继续使用\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%d|%s@%d&quot;</span>,                           <span class="comment">//将用户信息和成绩写入文本文件</span></span><br><span class="line">            scores.userid,</span><br><span class="line">            scores.username,</span><br><span class="line">            scores.score);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">writemis</span><span class="params">(SCORE scores,<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">&quot;C:\\驾校系统资源库\\mistakes.txt&quot;</span>,<span class="string">&quot;a+&quot;</span>))==<span class="literal">NULL</span>) </span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;很抱歉，打开错题记录文件失败，请尝试创建相关文件以继续使用\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%d|%s@&quot;</span>,                        <span class="comment">//将用户信息和错题题号写入文本文件</span></span><br><span class="line">            scores.userid,</span><br><span class="line">            scores.username);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)  &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%d,&quot;</span>,scores.mistakes[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">studytest</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>,n=<span class="number">0</span>,m;</span><br><span class="line">    text_answer a;</span><br><span class="line">    <span class="type">char</span> ch1,ans;</span><br><span class="line">    <span class="type">char</span> choice2;</span><br><span class="line">    FILE *fp,*fp1;</span><br><span class="line">    <span class="type">int</span> random[M];</span><br><span class="line">    <span class="type">int</span> mis=<span class="number">0</span>,count=<span class="number">1</span>,right=<span class="number">0</span>,score=<span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((fp1=fopen(<span class="string">&quot;C:\\驾校系统资源库\\text.txt&quot;</span>,<span class="string">&quot;r&quot;</span>))==<span class="literal">NULL</span>) </span><br><span class="line">&#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;嗯...试题库文件打开失败，请尝试联系管理员&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>((ch1=fgetc(fp1))!=EOF) &#123;            <span class="comment">//把题目放到数组中</span></span><br><span class="line">            <span class="keyword">if</span>(ch1==<span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ch1 &lt;= <span class="number">0</span> || (ch1 &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;9&#x27;</span>) || (ch1 &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;Z&#x27;</span>) || ch1 == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                <span class="comment">//把题目放到数组中，题目里的汉字在计算机存的码值小于0</span></span><br><span class="line">            &#123;</span><br><span class="line">                a.text[i][j++]=ch1;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ch1&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;ch1&lt;=<span class="string">&#x27;z&#x27;</span>)           <span class="comment">//把答案存到数组中</span></span><br><span class="line">                a.answer[k++]=ch1;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp1);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">Reanswer:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d.&quot;</span>,count);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">0</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);                                     <span class="comment">//输出题目和选项</span></span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;                                               E.退出学习&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">3</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag+<span class="number">4</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;答案为：&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c\n\n&quot;</span>,a.answer[flag/<span class="number">5</span>]<span class="number">-32</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;A.上一题                     B.下一题\n\n&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ans);</span><br><span class="line">            <span class="keyword">if</span> (ans!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;B&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;E&#x27;</span>)</span><br><span class="line"> &#123;                                                         <span class="comment">//判断输入的选项</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;你的选择无效,请重新选择。\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>); </span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span> Reanswer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ans==<span class="string">&#x27;A&#x27;</span>) &#123; </span><br><span class="line">                <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">                &#123;<span class="built_in">printf</span>(<span class="string">&quot;注意，这已经是第一题\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span> Reanswer;</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;flag-=<span class="number">5</span>;</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                count--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ans==<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">            &#123;<span class="keyword">if</span>(flag==(k<span class="number">-1</span>)*<span class="number">5</span>)</span><br><span class="line">            &#123;<span class="built_in">printf</span>(<span class="string">&quot;注意，已经是最后一题\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">goto</span> Reanswer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;flag+=<span class="number">5</span>;</span><br><span class="line">            count++;</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span>(ans==<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">Rechoose:</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;是否确认退出学习？\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A.是              B.否\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice2);</span><br><span class="line">                <span class="keyword">if</span> (choice2!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;choice2!=<span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;你的选择无效，请重新选择\n&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">goto</span> Rechoose;&#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;知识学习已结束。\n&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>); </span><br><span class="line">                    UserM();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                     system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span>  Reanswer;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n选择错误，正确答案为&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c\n\n&quot;</span>,a.answer[flag/<span class="number">5</span>]<span class="number">-32</span>);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            flag+=<span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">regist</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,t;</span><br><span class="line">    <span class="type">int</span> reg= <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> key[<span class="number">20</span>]; </span><br><span class="line">    <span class="type">char</span> account[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      ************************* 现在，让我们开始注册你的账户 *************************\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      只需要几步简单的操作，你就可以开始使用我们的系统了！请按如下引导操作。\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      请注意：你注册的ID必须为5位数字\n&quot;</span>);</span><br><span class="line">a:  <span class="built_in">printf</span>(<span class="string">&quot;      请输入ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, account);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strspn</span>(account, <span class="string">&quot;0123456789&quot;</span>) != <span class="built_in">strlen</span>(account))</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      ★你输入的ID无效，请重新输入\n\a&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> a; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(account)!=<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      ★你输入的ID长度不合规，请重新输入：\n\a&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> a;</span><br><span class="line">     &#125; </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; number; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(user[i].ID, account) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      ★这个账号已链接到其他账户，请重新输入\n\a&quot;</span>);    </span><br><span class="line">            <span class="keyword">goto</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      请设置你的密码，请注意，您的密码仅限6位：  \n&quot;</span>);</span><br><span class="line">b:    <span class="built_in">printf</span>(<span class="string">&quot;      请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, password);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(password)!=<span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      ★你输入的密码长度不合规，请重新输入：\n\a&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> b;</span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      请再次输入您的密码:  &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;key);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(key,password) == <span class="number">0</span>) </span><br><span class="line">            t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       两次输入的密码不一致，请重新输入 :) \n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(t == <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (reg) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(user[number].ID, account);</span><br><span class="line">        <span class="built_in">strcpy</span>(user[number].password, password);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      请输入你的用户名: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,user[number].name);</span><br><span class="line">        number++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      搞定！\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      你的账户已激活，现在可以开始使用你的系统了。\n&quot;</span>) ;</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    UserSM();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">login</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">log</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> account[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n       ************************* 如果你拥有我们的账户，请登录 *************************\n\n&quot;</span>);</span><br><span class="line">   c: <span class="built_in">printf</span>(<span class="string">&quot;       请输入账号：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, account); </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;       请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, password);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; number; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(user[i].ID, account) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(user[i].password, password) == <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       登录成功，即将进入系统\n&quot;</span>);    </span><br><span class="line">            <span class="built_in">log</span> = <span class="number">1</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            UserM(); </span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">log</span>==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       你的用户名或者密码输入错误，请重新输入\n\a&quot;</span>);</span><br><span class="line">    <span class="keyword">goto</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">savefile</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    FILE *file;</span><br><span class="line">    fopen(<span class="string">&quot;C:\\驾校系统资源库\\user.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; number; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;%s %s %s\n&quot;</span>, user[i].ID, user[i].password, user[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">readfile</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;C:\\驾校系统资源库\\user.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (feof(file)) <span class="keyword">break</span>;</span><br><span class="line">            i = number;</span><br><span class="line">            <span class="built_in">fscanf</span>(file, <span class="string">&quot;%s %s %s\n&quot;</span>, user[i].ID, user[i].password, user[i].name);</span><br><span class="line">            number++;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">Getmistakes</span><span class="params">(MISTAKE MIS)</span> &#123;</span><br><span class="line">    FILE *fp1;</span><br><span class="line">    <span class="type">char</span> ch1,ch2,ch,id1,id2,id3,id4,id5;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j,k,m,n,id,account;</span><br><span class="line">    <span class="type">int</span> misid[<span class="number">1000</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> mistext[N];</span><br><span class="line">    <span class="keyword">if</span> ((fp1=fopen(<span class="string">&quot;C:\\驾校系统资源库\\mistakes.txt&quot;</span>,<span class="string">&quot;r+&quot;</span>))==<span class="literal">NULL</span>) &#123; <span class="comment">//判断文件是否打开成功</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;很抱歉，打开错题记录文件失败，请尝试创建相关文件以继续使用\n\a&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch != EOF) &#123;.                                        <span class="comment">//获取错题文件中的用户ID</span></span><br><span class="line">        ch = fgetc(fp1);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!i) &#123;</span><br><span class="line">            id1 = ch;</span><br><span class="line">            id2 = fgetc(fp1);</span><br><span class="line">            id3 = fgetc(fp1);</span><br><span class="line">            id4 = fgetc(fp1);</span><br><span class="line">            id5 = fgetc(fp1);</span><br><span class="line">            id=((<span class="type">int</span>)id1<span class="number">-48</span>)*<span class="number">10000</span>+((<span class="type">int</span>)id2<span class="number">-48</span>)*<span class="number">1000</span>+((<span class="type">int</span>)id3<span class="number">-48</span>)*<span class="number">100</span>+((<span class="type">int</span>)id4<span class="number">-48</span>)*<span class="number">10</span>+(<span class="type">int</span>)id5<span class="number">-48</span>;</span><br><span class="line"><span class="comment">//注意转换</span></span><br><span class="line">            misid[i++]=id;                                            <span class="comment">//存放用户ID</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            id1 =fgetc(fp1) ;</span><br><span class="line">            id2 = fgetc(fp1);</span><br><span class="line">            id3 = fgetc(fp1);</span><br><span class="line">            id4 = fgetc(fp1);</span><br><span class="line">            id5 = fgetc(fp1);</span><br><span class="line">            id=((<span class="type">int</span>)id1<span class="number">-48</span>)*<span class="number">10000</span>+((<span class="type">int</span>)id2<span class="number">-48</span>)*<span class="number">1000</span>+((<span class="type">int</span>)id3<span class="number">-48</span>)*<span class="number">100</span>+((<span class="type">int</span>)id4<span class="number">-48</span>)*<span class="number">10</span>+(<span class="type">int</span>)id5<span class="number">-48</span>;</span><br><span class="line"><span class="comment">//注意转换</span></span><br><span class="line">            misid[i++]=id;                                            <span class="comment">//存放用户ID</span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入用户ID\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;account);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    MIS.userid=account;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(misid[j]==account) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rewind(fp1);                                                <span class="comment">//使光标返回文件头</span></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;j; k++)</span><br><span class="line">        moveToNextLine(fp1);                                    <span class="comment">//使光标向下移动一行</span></span><br><span class="line">    n=Getmis(fp1,mistext);</span><br><span class="line">    <span class="keyword">for</span>(m=<span class="number">0</span>; m&lt;n; m++) &#123;</span><br><span class="line">        MIS.mistakes[m]=mistext[m];</span><br><span class="line">    &#125;</span><br><span class="line">    mistest(n,MIS);</span><br><span class="line"> </span><br><span class="line">    fclose(fp1);                                                <span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">moveToNextLine</span><span class="params">(FILE *fp)</span> &#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        c = fgetc(fp);</span><br><span class="line">        <span class="keyword">if</span>(c == EOF) <span class="keyword">return</span> EOF;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">&#x27;\n&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">Getmis</span><span class="params">(FILE *fp1,<span class="type">int</span> a[])</span> &#123;</span><br><span class="line">    <span class="type">char</span> ch1,ch2,ch3,ch5,ch=<span class="string">&#x27;a&#x27;</span>,id1,id2,id3,id4,id5;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j,k,id,account,ch4;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(ch1!= <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        ch = fgetc(fp1);</span><br><span class="line">        <span class="keyword">while</span>(ch==<span class="string">&#x27;@&#x27;</span>) &#123;</span><br><span class="line"> </span><br><span class="line">            ch1= fgetc(fp1);</span><br><span class="line">            <span class="keyword">if</span>(ch1==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">            ch2=fgetc(fp1);</span><br><span class="line">            <span class="keyword">if</span>(ch2!=<span class="string">&#x27;,&#x27;</span>) &#123;</span><br><span class="line">                ch3=fgetc(fp1);</span><br><span class="line">                <span class="keyword">if</span>(ch3!=<span class="string">&#x27;,&#x27;</span>) &#123;</span><br><span class="line">                    ch4=((<span class="type">int</span>)ch1<span class="number">-48</span>)*<span class="number">100</span>+((<span class="type">int</span>)ch2<span class="number">-48</span>)*<span class="number">10</span>+(<span class="type">int</span>)ch3<span class="number">-48</span>;</span><br><span class="line">                    a[i++]=ch4;</span><br><span class="line">                    ch4=fgetc(fp1);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ch4=((<span class="type">int</span>)ch1<span class="number">-48</span>)*<span class="number">10</span>+(<span class="type">int</span>)ch2<span class="number">-48</span>;</span><br><span class="line">                    a[i++]=ch4;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ch4=(<span class="type">int</span>)ch1<span class="number">-48</span>;</span><br><span class="line">                a[i++]=ch4;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">mistest</span><span class="params">(<span class="type">int</span> n,MISTAKE MIS)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>,count2=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> flag,m;</span><br><span class="line">    text_answer a;</span><br><span class="line">    <span class="type">char</span> ch1,ans;</span><br><span class="line">    <span class="type">char</span> choice2;</span><br><span class="line">    FILE *fp,*fp1;</span><br><span class="line">    <span class="type">int</span> random[M];</span><br><span class="line">    <span class="type">int</span> mis=<span class="number">0</span>,count=<span class="number">1</span>,right=<span class="number">0</span>,score=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> ((fp1=fopen(<span class="string">&quot;C:\\驾校系统资源库\\text.txt&quot;</span>,<span class="string">&quot;r&quot;</span>))==<span class="literal">NULL</span>) &#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;嗯...试题库文件打开失败，请尝试联系管理员&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>((ch1=fgetc(fp1))!=EOF) &#123; </span><br><span class="line">            <span class="keyword">if</span>(ch1==<span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ch1 &lt;= <span class="number">0</span> || (ch1 &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;9&#x27;</span>) || (ch1 &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch1 &lt;= <span class="string">&#x27;Z&#x27;</span>) || ch1 == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                <span class="comment">//把题目放到数组中，题目里的汉字在计算机存的码值小于0</span></span><br><span class="line">            &#123;</span><br><span class="line">                a.text[i][j++]=ch1;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ch1&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;ch1&lt;=<span class="string">&#x27;z&#x27;</span>) </span><br><span class="line">                a.answer[k++]=ch1;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        flag=MIS.mistakes[count2++];<span class="comment">//随机抽题</span></span><br><span class="line">        <span class="keyword">if</span>((flag%<span class="number">1</span>)!=<span class="number">0</span>).                   <span class="comment">//判断随机数是否为5的倍数（题目的行号为5的倍数）</span></span><br><span class="line">            n++;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">Reanswer:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d.&quot;</span>,count);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag*<span class="number">5</span>+<span class="number">0</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag*<span class="number">5</span>+<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag*<span class="number">5</span>+<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;                                               E.退出错题&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag*<span class="number">5</span>+<span class="number">3</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(a.text[flag*<span class="number">5</span>+<span class="number">4</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你选择：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ans);</span><br><span class="line">            <span class="keyword">if</span> (ans!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;B&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;C&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;D&#x27;</span>&amp;&amp;ans!=<span class="string">&#x27;E&#x27;</span>) &#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;无效选择！请重新作答！\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">goto</span> Reanswer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (a.answer[flag]==ans+<span class="number">32</span>) &#123;                         <span class="comment">//判断答案</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n选择正确\n\n&quot;</span>);</span><br><span class="line">                right++;</span><br><span class="line"> </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ans==<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">Rechoose:</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;是否确认退出错题？\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A.是              B.否\n\n&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choice2);</span><br><span class="line">                <span class="keyword">if</span> (choice2!=<span class="string">&#x27;A&#x27;</span>&amp;&amp;choice2!=<span class="string">&#x27;B&#x27;</span>) &#123; <span class="comment">//判断输入的选项</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;无效选择！请重新选择！\n&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line"> </span><br><span class="line">                    <span class="keyword">goto</span> Rechoose;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(choice2==<span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                    <span class="keyword">goto</span>  Reanswer;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n选择错误，正确答案为&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c\n\n&quot;</span>,a.answer[flag/<span class="number">5</span>]<span class="number">-32</span>);</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            score=<span class="number">100</span>-mis;</span><br><span class="line">            count++;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(--n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;错题重做已结束，请继续学习，即将返回主界面。&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    UserM();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//admin.c中的代码</span></span><br><span class="line"><span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">showscore</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    fp=fopen(<span class="string">&quot;C:\\驾校系统资源库\\userscore.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;抱歉，打开成绩记录文件失败，请尝试创建相关文件以继续使用&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你的组织内的用户成绩如下：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;提示：‘@’后是你组织成员的考试分数：\n&quot;</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    <span class="keyword">while</span> ((ch=fgetc(fp))!=EOF)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">fclose(fp);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">AdminM();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">addexe</span><span class="params">()</span>。                                               <span class="comment">//添加习题</span></span><br><span class="line"> &#123;</span><br><span class="line">    FILE *fp1;</span><br><span class="line">    <span class="type">char</span> topic[N];</span><br><span class="line">    <span class="type">char</span> choice1[N];</span><br><span class="line">    <span class="type">char</span> choice2[N];</span><br><span class="line">    <span class="type">char</span> choice3[N];</span><br><span class="line">    <span class="type">char</span> choice4[N];</span><br><span class="line">    <span class="type">char</span> answer;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="keyword">if</span> ((fp1=fopen(<span class="string">&quot;C:\\驾校系统资源库\\text.txt&quot;</span>,<span class="string">&quot;a+&quot;</span>))==<span class="literal">NULL</span>) &#123; <span class="comment">/*判断文件是否打开成功*/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;嗯...试题库文件打开失败，请尝试联系管理员\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入题目：\n\n&quot;</span>);</span><br><span class="line">    gets(topic);<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    <span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%s&quot;</span>,topic);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp1);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入选项A：\n\n&quot;</span>);</span><br><span class="line">    gets(choice1);<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    <span class="built_in">fprintf</span>(fp1,<span class="string">&quot;A、%s&quot;</span>,choice1);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp1);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入选项B：\n\n&quot;</span>);</span><br><span class="line">    gets(choice2);<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    <span class="built_in">fprintf</span>(fp1,<span class="string">&quot;B、%s&quot;</span>,choice2);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp1);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入选项C：\n\n&quot;</span>);</span><br><span class="line">    gets(choice3);<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    <span class="built_in">fprintf</span>(fp1,<span class="string">&quot;C、%s&quot;</span>,choice3);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入选项D：\n\n&quot;</span>);</span><br><span class="line">    gets(choice4);<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp1,<span class="string">&quot;D、%s&quot;</span>,choice4);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入答案：\n\n&quot;</span>);</span><br><span class="line">answer=getchar();<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line"><span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%c&quot;</span>,answer);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>,fp1);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;题目已成功添加！你是否需要继续添加题目？\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1 是   2 否\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">&#125; <span class="keyword">while</span>(a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">2</span>)</span><br><span class="line">&#123;system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;试题添加已结束。 \n&quot;</span>) ;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">fclose(fp1);</span><br><span class="line">ExerM();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">adminregist</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,t;</span><br><span class="line">    <span class="type">char</span> key[<span class="number">20</span>]; </span><br><span class="line">    <span class="type">int</span> reg= <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> account[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       ************************* 现在，让我们开始添加管理员到你的组织 *************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       只需要几步简单的操作，就可以成功添加新的管理员请按如下引导操作。\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       请注意：你注册的ID必须为5位数字\n&quot;</span>);</span><br><span class="line">a:  <span class="built_in">printf</span>(<span class="string">&quot;       请输入你想要添加的管理员ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, account);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strspn</span>(account, <span class="string">&quot;0123456789&quot;</span>) != <span class="built_in">strlen</span>(account))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       ★你输入的ID无效，请重新输入\n&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> a; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(account)!=<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       ★你输入的ID长度不合规，请重新输入：\n&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> a;</span><br><span class="line">     &#125; </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(admin[i].ID, account) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;此管理员用户已存在，请尝试添加其他用户\n&quot;</span>);    </span><br><span class="line">            <span class="keyword">goto</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       请输入您的密码，请注意，您的密码仅限6位：  \n&quot;</span>);</span><br><span class="line">b:    <span class="built_in">printf</span>(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, password);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(password)!=<span class="number">6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       ★你输入的密码长度不合规，请重新输入：\n&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> b;</span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       请再次输入您的密码:  &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;key);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(key,password) == <span class="number">0</span>) </span><br><span class="line">            t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;       两次输入的密码不一致，请重新输入 :) \n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(t == <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (reg) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(admin[num].ID, account);</span><br><span class="line">        <span class="built_in">strcpy</span>(admin[num].password, password);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       请输入你的用户名: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,admin[num].name);</span><br><span class="line">        num++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       搞定！\n&quot;</span>); </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       管理员添加成功，现在可以开始管理系统了\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    AdminM(); </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">adminsavefile</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;C:\\驾校系统资源库\\admin.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;%s %s %s\n&quot;</span>, admin[i].ID, admin[i].password, admin[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">adminreadfile</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;C:\\驾校系统资源库\\admin.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (feof(file)) <span class="keyword">break</span>;</span><br><span class="line">            i = num;</span><br><span class="line">            <span class="built_in">fscanf</span>(file, <span class="string">&quot;%s %s %s\n&quot;</span>, admin[i].ID, admin[i].password, admin[i].name);</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">adminlogin</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">log</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> account[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n       ************************* 如果你拥有管理员账户，请登录 *************************\n&quot;</span>);</span><br><span class="line">   c: <span class="built_in">printf</span>(<span class="string">&quot;       请输入账号：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, account); </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;       请输入密码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, password);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(admin[i].ID, account) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(admin[i].password, password) == <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;       登录成功，即将进入系统\n&quot;</span>);    </span><br><span class="line">            <span class="built_in">log</span> = <span class="number">1</span>;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            AdminM();</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">log</span>==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;      你的用户名或者密码输入错误，请重新输入\n&quot;</span>);</span><br><span class="line">    <span class="keyword">goto</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//menu.c中的代码</span></span><br><span class="line"><span class="type">int</span> cyn;</span><br><span class="line"><span class="comment">//总菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MainM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;************ 欢迎使用 驾考通·驾驶员科目一模拟系统 ****************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*       1 管理员点这里            2 普通用户点这里                *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                     0 退出程序                                  *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*******************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    &#125; <span class="keyword">while</span> (n!=<span class="number">1</span>&amp;&amp;n!=<span class="number">2</span>&amp;&amp;n!=<span class="number">0</span>);<span class="comment">//读取用户输入的值，并进行相应跳转</span></span><br><span class="line">    <span class="keyword">switch</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;正在进入管理员系统，请稍候...\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            AdminSM();  </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;正在进入用户系统，请稍候...\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            UserSM();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;程序已退出!\n\a&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//用户部分</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//用户主菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UserSM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*************************  欢迎！ *********************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*       1 我已经拥有账号（登录）     2 没有账号？（注册一个！）   *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                          0 返回                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*******************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    &#125; <span class="keyword">while</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            readfile();</span><br><span class="line">            cyn=login();<span class="comment">//登录系统（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            readfile();</span><br><span class="line">            regist();</span><br><span class="line">            savefile();<span class="comment">//注册系统（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            MainM();<span class="comment">//返回主菜单（已完成）</span></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//用户分菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UserM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;**********************   祝你学习愉快   ************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                              *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                  1 知识学习     2 模拟测试                   *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                  3 错题重做                                  *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                              *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                          0 退出登录                          *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                              *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;****************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    &#125; <span class="keyword">while</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">0</span>&amp;&amp;a!=<span class="number">3</span>&amp;&amp;a!=<span class="number">4</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            studytest(); <span class="comment">//学习系统（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            test(cyn);<span class="comment">//测验系统（已完成）</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            Getmistakes(MIS);<span class="comment">//错题重做 </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            UserSM();<span class="comment">//返回用户主菜单（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//管理员部分</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//管理员主菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AdminSM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*************************  欢迎！ ****************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                            *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                       1 管理员登录                         *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                            *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                       0 返回上一级                         *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                            *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;**************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    &#125; <span class="keyword">while</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            adminreadfile();<span class="comment">//管理员登录（已完成） </span></span><br><span class="line">            adminlogin(); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            MainM();<span class="comment">//返回总菜单 （已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//管理员分菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AdminM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;********************  驾考通·后台管理系统   ********************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                               *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*              1 题库管理            2 成绩查看                 *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                       3 添加管理员                            *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                       0 退出登录                              *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                               *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*****************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    &#125; <span class="keyword">while</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">0</span>&amp;&amp;a!=<span class="number">3</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请稍等，我们正在进入题库...&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            ExerM() ;<span class="comment">//进入题库菜单（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            showscore(); <span class="comment">//成绩查看（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            adminreadfile();</span><br><span class="line">            adminregist();</span><br><span class="line">            adminsavefile();<span class="comment">//添加管理员（已完成） </span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            AdminSM();<span class="comment">//返回管理员主菜单 </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//题库管理菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ExerM</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*********************  驾考通·题库管理系统  ********************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                               *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                  1 增加试题     2 删除编辑试题                *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                  3 返回上页                                   *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                               *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                        0 退出登录                             *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*                                                               *\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*****************************************************************\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    &#125; <span class="keyword">while</span> (a!=<span class="number">1</span>&amp;&amp;a!=<span class="number">2</span>&amp;&amp;a!=<span class="number">0</span>&amp;&amp;a!=<span class="number">3</span>&amp;&amp;a!=<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//增加试题（已完成） </span></span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            addexe();   </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//删除编辑试题（已完成） </span></span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;题目编辑涉及错题系统变更\n&quot;</span>); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请前往文件夹：桌面-驾校系统资源库-text.txt对该文本文件进行修改\n&quot;</span>) ;</span><br><span class="line">            system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            ExerM(); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            AdminM();<span class="comment">//返回管理员分菜单（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            AdminSM();<span class="comment">//返回管理员主菜单（已完成） </span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C/C++</category>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu配置hadoop（基于Docker）</title>
    <url>/2023/09/07/2023/Ubuntu%E9%85%8D%E7%BD%AEhadoop%EF%BC%88%E5%9F%BA%E4%BA%8EDocker%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>大数据挖掘需要搭建Linux虚拟机上的hadoop集群</p>
<p>踩过的坑都在这里了</p>
</blockquote>
<span id="more"></span>
<blockquote>
<p><strong>前言</strong></p>
<p>在大数据挖掘和Linux这两门课都需要搭建Linux环境，老师的推荐都是VMware等虚拟机，我觉得用Docker容器更加方便一些，于是就找教程用Docker创建Ubuntu容器，但是踩了很多坑，还好都解决了，现在记录一下。</p>
</blockquote>
<h1 id="一启动docker容器">一、启动Docker容器</h1>
<p>首先pull一个Ubuntu镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意这边直接pull
ubuntu的话会直接下载最新版本，可以通过ubuntu:18.04来下载指定版本</p>
</blockquote>
<p>接着通过镜像运行一个容器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -dit --name=main -p 9870:9870 -p 8088:8088 ubuntu</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意这里要使用-p指令开放9870和8088两个端口，之后会用到</p>
</blockquote>
<p>使用docker exec命令进入容器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it main /bin/bash</span><br></pre></td></tr></table></figure>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907221648062.png"
alt="image-20230907221648062" />
<figcaption aria-hidden="true">image-20230907221648062</figcaption>
</figure>
<h1 id="二安装jdk">二、安装jdk</h1>
<p>在<code>Ubuntu</code>中用压缩包安装jdk较为麻烦，需要<code>配置系统环境变量</code>和<code>配置文件</code>，一步出错可能无法使用。所以本文在<code>Ubuntu</code>中使用命令安装jdk。其他方法安装jdk也可。</p>
<p>打开终端</p>
<p>执行以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907201605154.png" alt="image-20230907201605154" style="zoom: 50%;" /></p>
<blockquote>
<p>如果报错bash: sudo: command not found的话，先执行下面两个命令</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get update <span class="comment"># 更新apt-get</span></span><br><span class="line">apt-get install sudo <span class="comment"># 安装sudo</span></span><br></pre></td></tr></table></figure>
<p>安装完成后查看Java是否安装成功</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>如下图所示则安装成功：</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907201808967.png" alt="image-20230907201808967" style="zoom: 80%;" /></p>
<p>如果需要卸载jdk则使用以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt remove openjdk*</span><br></pre></td></tr></table></figure>
<h1 id="三配置环境文件">三、配置环境文件</h1>
<h2 id="打开环境文件">打开环境文件</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>如果没有vim编辑器则需要下载：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure>
<p>或使用gedit编辑器也行</p>
<h2 id="加入语句">加入语句</h2>
<p>文件顶部加入以下语句并保存：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 <span class="comment">#目录要换成自己jdk所在目录</span></span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span> </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907224228576.png" alt="image-20230907224228576" style="zoom:67%;" /></p>
<p>使环境生效</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>使用 <code>echo $JAVA_HOME</code>
显示<code>JAVA_HOME</code>即为成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907224430938.png" alt="image-20230907224430938"  /></p>
<h1 id="四安装ssh免密码登录">四、安装ssh免密码登录</h1>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ssh openssh-server</span><br></pre></td></tr></table></figure>
<p>安装完毕后先cd到~</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure>
<p>再创建.ssh文件夹</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> .ssh</span><br></pre></td></tr></table></figure>
<p>再cd到.ssh中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> .ssh</span><br></pre></td></tr></table></figure>
<p>生成密钥</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa </span><br></pre></td></tr></table></figure>
<p>按三次回车</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907230349029.png" alt="image-20230907230349029" style="zoom: 80%;" /></p>
<p>将秘钥加入到授权中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure>
<p>再验证ssh localhost 如下图，不用密码登录即为成功</p>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907230905985.png"
alt="image-20230907230905985" />
<figcaption aria-hidden="true">image-20230907230905985</figcaption>
</figure>
<blockquote>
<p>如果发生以下报错，那就看这个博客的解决方案 <a
href="https://blog.csdn.net/wfx056012/article/details/115707777">这里</a>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907231020690.png"
alt="image-20230907231020690" /></p>
</blockquote>
<h1 id="五安装hadoop">五、安装Hadoop</h1>
<p>1）安装hadoop并解压</p>
<p>先cd到/usr/local</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br></pre></td></tr></table></figure>
<p>镜像下载链接https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.3.1/</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.3.1/hadoop-3.3.1.tar.gz</span><br></pre></td></tr></table></figure>
<p>然后解压后进入文件夹</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -zxvf hadoop-3.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> hadoop-3.3.1</span><br></pre></td></tr></table></figure>
<p>2）配置相关文件</p>
<blockquote>
<p>core-site.xml</p>
</blockquote>
<p>打开/etc/hadoop中的core-site.xml 文件，加入如下语句并保存</p>
<blockquote>
<p>注意在在<code>configuration</code>标签中加入</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">             &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">             &lt;value&gt;file:/usr/local/hadoop-3.3.1/tmp&lt;/value&gt;</span><br><span class="line">             &lt;description&gt;Abase <span class="keyword">for</span> other temporary directories.&lt;/description&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">             &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">             &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230907232907417.png" alt="image-20230907232907417" style="zoom:80%;" /></p>
<blockquote>
<p>hdfs-site.xml</p>
</blockquote>
<p>和上面一样，打开/etc中的hdfs-site.xml 文件，加入如下语句并保存</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">             &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">             &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">             &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">             &lt;value&gt;file:/usr/local/hadoop-3.3.1/tmp/dfs/name&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">             &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">             &lt;value&gt;file:/usr/local/hadoop-3.3.1/tmp/dfs/data&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>hadoop-env.sh</p>
</blockquote>
<p>查看你的 jdk安装目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure>
<p>打开 hadoop-env.sh 文件配置如下并保存：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="string">&quot;/usr/lib/jvm/java-8-openjdk-amd64&quot;</span>  <span class="comment"># 根据自己的路径写</span></span><br></pre></td></tr></table></figure>
<h1 id="六运行hadoop">六、运行Hadoop</h1>
<p>1）首先初始化HDFS系统</p>
<p>在hadop3.3.0目录下使用如下命令进行初始化：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">bin/hdfs namenode -format</span><br></pre></td></tr></table></figure>
<p>成功后如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908100159505.png" alt="image-20230908100159505" style="zoom: 67%;" /></p>
<p>2）开启NameNode和DataNode守护进程</p>
<p>继续运行如下命令开启Hadoop：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>
<p>成功后如下图：</p>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908100504572.png"
alt="image-20230908100504572" />
<figcaption aria-hidden="true">image-20230908100504572</figcaption>
</figure>
<blockquote>
<p>如果出现以下报错，请查看这个博客 <a
href="https://blog.csdn.net/emgexgb_sef/article/details/124246231">这里</a></p>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908100616153.png"
alt="image-20230908100616153" />
<figcaption aria-hidden="true">image-20230908100616153</figcaption>
</figure>
</blockquote>
<p>3）查看jps进程信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure>
<p>如下图即为成功： <img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908101222750.png"
alt="image-20230908101222750" /></p>
<blockquote>
<p>关闭hadoop使用命令 sbin/stop-dfs.sh</p>
</blockquote>
<p>打开浏览器输入<a
href="http://localhost:9870/">http://localhost:9870</a>，成功打开</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908101314185.png" alt="image-20230908101314185" style="zoom:67%;" /></p>
<p>4）创建Hadoop用户组</p>
<p>使用/bin/bash作为shell：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo useradd -m hadoop -s /bin/bash </span><br></pre></td></tr></table></figure>
<p>设置密码：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo passwd hadoop</span><br></pre></td></tr></table></figure>
<p>添加hadoop至管理员权限：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo adduser hadoop sudo</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908102449452.png" alt="image-20230908102449452" style="zoom:80%;" /></p>
<h1 id="七配置yarn">七、配置yarn</h1>
<blockquote>
<p>搭建前请保证已经搭建好了HDFS的环境，即配置好所上内容。</p>
</blockquote>
<p>1）终端输入hostname查看主机名</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure>
<p>2）打开/etc/hadoop下yarn-site.xml，在<code>configuration</code>标签中加入如下内容，注意主机名要修改为自己的</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!--Resource Manager--&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;你的主机名&lt;/value&gt;&lt;!--你的hostname的主机名--&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<p>3）打开mapred-site.xml
文件，配置如下（在configuration标签中间加入）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<p>4）在主文件夹输入命令启动yarn</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>
<p>jps查看进程多了两个东西</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908103109094.png" alt="image-20230908103109094"  /></p>
<p>在浏览器输入http://localhost:8088</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230908103241262.png" alt="image-20230908103241262" style="zoom:80%;" /></p>
<p>至此，hadoop全部配置完成</p>
<h1 id="创建镜像">创建镜像</h1>
<p>为了后期使用方便，我们可以将容器保存为镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker commit main hadoop_base</span><br></pre></td></tr></table></figure>
<p>这样我们想要启动一个新的容器时只需要在镜像上启动就行了</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -dit -p 9870:9870 -p 8088:8088 main hadoop_base</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考链接：</p>
<p>https://blog.csdn.net/weixin_58707437/article/details/127931069</p>
</blockquote>
]]></content>
      <categories>
        <category>Docker</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>LATEX公式使用</title>
    <url>/2023/09/15/2023/LATEX%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>一些实用的技术</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<blockquote>
<p>最近在想写博客的时候发现我不太会用latex公式，就准备学一学</p>
<p>网上有太多教程了，我就不重复劳动了，把一些重要的常用的copy下来，其他的转载</p>
</blockquote>
<h1 id="如何插入公式">如何插入公式</h1>
<p><code>𝐿𝐴𝑇𝐸𝑋</code>
的数学公式有两种：行中公式和独立公式（行间公式）。行中公式放在文中与其它文字混编，独立公式单独成行。</p>
<p>行中公式可以用如下方法表示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ 数学公式 $</span><br></pre></td></tr></table></figure>
<p>独立公式可以用如下方法表示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ 数学公式 $$</span><br></pre></td></tr></table></figure>
<h3 id="标准函数">标准函数<a
href="https://www.cnblogs.com/1024th/p/11623258.html#2083047927">#</a></h3>
<p>指数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\exp_a b = a^b, \exp b = e^b, 10^m</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\exp_a b = a^b, \exp b = e^b, 10^m
\]</span></p>
<p>对数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\ln c, \lg d = \log e, \log_&#123;10&#125; f</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\ln c, \lg d = \log e, \log_{10} f
\]</span></p>
<p>三角函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\sin a, \cos b, \tan c, \cot d, \sec e, \csc f</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\sin a, \cos b, \tan c, \cot d, \sec e, \csc f
\]</span></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\arcsin a, \arccos b, \arctan c</span><br></pre></td></tr></table></figure>
<p><span class="math display">\[
\arcsin a, \arccos b, \arctan c
\]</span></p>
<p>其余请看这篇博文<a
href="https://www.cnblogs.com/1024th/p/11623258.html">LaTeX公式手册(全网最全)</a></p>
]]></content>
      <categories>
        <category>LATEX</category>
      </categories>
      <tags>
        <tag>LATEX</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2023/01/29/2023/hello-world/</url>
    <content><![CDATA[<p>欢迎来到我的博客！</p>
]]></content>
  </entry>
  <entry>
    <title>二叉树遍历简单做法</title>
    <url>/2023/02/09/2023/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E7%AE%80%E5%8D%95%E5%81%9A%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>看王道数据结构考研复习有感</p>
</blockquote>
<span id="more"></span>
<h1 id="问题">问题</h1>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/%E4%BA%8C%E5%8F%89%E6%A0%91.PNG" alt="二叉树" style="zoom:33%;" /></p>
<p>给出如图所示二叉树，请你分别对其进行前序、中序、后序遍历并给出遍历结果。</p>
<h1 id="解答">解答</h1>
<p>这里我们除了可以用编程思想一步一步进行遍历，还有一种更为简单快速的方法，这里我称它画图法。</p>
<h2 id="步骤一">步骤一</h2>
<p>我们先在每个结点旁画上小圆点，这里我们以前序遍历为例，在结点左侧画上小圆点。（中序遍历在下侧，后序遍历在右侧）</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/%E5%89%8D%E5%BA%8F.PNG" alt="前序" style="zoom:33%;" /></p>
<h2 id="步骤二">步骤二</h2>
<p>以根节点上方为起点，从左侧贴着二叉树画线穿过小圆点，绕一周回到起点。</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/%E5%89%8D%E5%BA%8F2.PNG" alt="前序2" style="zoom:33%;" /></p>
<h2 id="步骤三">步骤三</h2>
<p>穿过小圆点的先后顺序便是遍历的结果。 这次遍历的结果为：</p>
<center>
<font color=Tomato size=6>前序：ABDECFHG</font>
</center>
<p>这样我们也能得到中序和后序遍历的结果了：</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/%E4%B8%AD%E5%BA%8F.PNG" alt="中序" style="zoom:33%;" /></p>
<center>
<font color=Tomato size=6>中序：DBEAFHCG</font>
</center>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/%E5%90%8E%E5%BA%8F.PNG" alt="后序" style="zoom:33%;" /></p>
<center>
<font color=Tomato size=6>后序：DEBHFGCA</font>
</center>
]]></content>
      <categories>
        <category>学科</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>关于2023暑假</title>
    <url>/2023/09/15/2023/%E5%85%B3%E4%BA%8E2023%E6%9A%91%E5%81%87/</url>
    <content><![CDATA[<blockquote>
<p>给忙碌的暑假一个交代</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/IMG_2971.jpeg" style="zoom:80%;" /></p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>这篇总结拖了很久，一直没有很充裕的时间来回忆和总结这个暑假的实习（也是我太懒了），所以我准备用每天的碎片时间来对我这个暑假做一个总结。</p>
<h1 id="实习">实习</h1>
<p>在这个暑假我找到我的第一份<code>实习</code>，也是托关系找来的，在暑假前我一直在刷脉脉和知乎，我也是被网上的言论给影响了，当时我一直有股信念，本科能找到不错的工作就没有必要读研了，特别是像现在这样的经济形势，说不定读三年研究生出来能找到的工作还不如本科时候找到的，所以我在暑假就很想学<code>技术</code>，就推掉了数模国赛转而去实习。</p>
<h2 id="七月">七月</h2>
<p>在七月十号左右我入职了，当时我的<code>mentor</code>还没来，就把显示器插排什么的都放到工位，本来以为我是来做大数据相关工作的，所以就把各类db软件下载了下来，然后开始学习</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/IMG_2957.jpeg" alt="IMG_2957" style="zoom: 50%;" /></p>
<p>第二天公司老总和我谈了谈，我当时很迷茫的一点是要不要读研，老总和我讲了很多，说未来是人工智能的天下，并且给我配的导师是搞人工智能的，技术很厉害，让我多和他学习，而且说不建议我读研。不过我当时想，ai已经卷成这样了，很多硕士都找不到工作，搞ai还不读研那不是自寻死路吗，当然这也是当时的想法，经历的多了之后想法会不断产生变化。</p>
<h3 id="初遇mentor">初遇mentor</h3>
<p>在周五左右我第一次见到了我的mentor，看起来很和善，我们也找了个时间谈了一下，他给我介绍了人工智能目前的状况，并十分建议我读研，而且最好到国外去读（毕竟国外学习和开发的环境要自由些），他说目前公司就只有他一个人搞ai，说我来还挺高兴的，这样可以有人一起讨论，而且十分愿意教我。</p>
<p>说实话我在之前也没接触过ai，也没想过去做ai，这次实习属于是我对ai的启蒙。</p>
<h3 id="学习">学习</h3>
<p>一开始因为我对ai没什么了解，所以mentor给了我很多资料，并且让我去看<code>吴恩达的deep learning</code>，听说是英文的我还害怕了一下，等到实际在学习的时候就会发现基本上没有什么障碍，不得不说很多外国的课程是真的高质量，由浅入深、通俗易懂。</p>
<p>我花了一周时间认真看完了这门课，对神经网络有了一定的了解，也意识到人工智能底层就是数学，就是<code>高数+线性代数+概率论+统计学</code>的集合。</p>
<h2 id="八月">八月</h2>
<p>mentor和我说我来的时间其实很不巧，因为公司做事是阶段性的，在我来的期间正好公司没有什么业务拓展，所以我就只好看看公司以前的项目代码。</p>
<h3 id="e集运">e集运</h3>
<p>e集运是我接触的第一个项目，mentor很详细的给我梳理了整个项目的流程框架，在这个项目我也学到很多，像<code>Docker</code>，<code>git</code>等，我准备再之后新写一篇博客具体梳理一下这个项目。</p>
<h3 id="github">Github</h3>
<p>因为拉公司项目什么的需要用到<code>git</code>，所以我也仔细学习了一下git的相关技术，我也真正理解了<code>GitHub</code>的正确打开姿势，很遗憾我到现在才真正学会了github，以后要开始代码管理咯。</p>
<h3 id="新项目">新项目</h3>
<p>我也接触到了一些公司准备新进行的项目，通过做项目我才了解我的技术远远不够，像各种数据库的使用，我们专业将数据库这门课放到了大三下学期，我认为这是极不合理的，数据库是工作时必备的技术，所以我十分建议早点把数据库学起来。</p>
<p>新项目是语言大模型和功能调用的融合，我其实没做什么，只是一直在pull代码看其他员工是怎么写的，就只是这样我也学到了很多。</p>
<h3 id="kaggle天池">Kaggle/天池</h3>
<p>在一开始的时候mentor就跟我说，如果要短期内学到很多东西，那就去打个比赛，像他自己就在打比赛，他十分推荐我去打<code>Kaggle</code>，当时我觉得，比赛什么时候都可以打，但公司项目不是什么时候都能接触的，所以就没选择打比赛，现在开学了，我也准备打一场kaggle看看，提升自己。</p>
<h3 id="分别">分别</h3>
<p>我的实习是做到8月25号，是个周五，在周一的时候mentor兴冲冲找到我说：“来活了！他们准备在之前e集运那个项目再做拓展。”唉，还是挺可惜的，那个时候已经没有时间做了。</p>
<p>最后要分别的前一天mentor又找到我聊了聊，聊到未来的方向，我当时还是想着ai太卷了，想做java开发什么的，到现在有些改观，现在我感觉未来ai的门槛会越来越低。</p>
<h1 id="未来">未来</h1>
<p>在暑期末的时候，我爸妈带我去做了职业规划，找的是抖音上的水哥职说，也在苏州，最后也是确定要出国了。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>优化问题笔记</title>
    <url>/2023/09/17/2023/%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<blockquote>
<p>南京邮电大学课程：最优化方法——张伯雷</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<blockquote>
<p>本系列笔记的图片部分来自张伯雷老师的课堂ppt和网上，笔记仅供本人和需要的人学习使用。</p>
</blockquote>
<h1 id="优化问题介绍">优化问题介绍</h1>
<h2 id="优化问题1">优化问题1</h2>
<h3 id="题目">题目</h3>
<blockquote>
<ul>
<li>还有⼀个星期就要到期末考试，小明⼀共要考4门课，但只能复习70个小时，假设<span
class="math inline">\(x=(x_1,x_2,...,x_4)\)</span>代表小明分别花在4门课上的时间</li>
<li><span class="math inline">\(f_i(x)\)</span>, 𝑖 = 1, 2, 3, 4
为小明在第𝑖门课中的成绩</li>
</ul>
</blockquote>
<h3 id="问题建模">问题建模</h3>
<ul>
<li><p>最大化最终的总分数：<span
class="math inline">\(\sum_if_i(x)\)</span></p></li>
<li><p>每门课都需要及格，同时花的时间不能超过70：</p></li>
<li><p><span class="math inline">\(\sum_ix_i ≤ 70\)</span>, <span
class="math inline">\(x_i ≥ 0\)</span>, <span
class="math inline">\(f_i(x_i) ≥ 60\)</span></p></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230917224239707.png" alt="image-20230917224239707" style="zoom:67%;" /></p>
<h3 id="如何合理分配资源">如何合理分配资源？</h3>
<h2 id="优化问题2">优化问题2</h2>
<h3 id="题目-1">题目</h3>
<blockquote>
<ul>
<li>小李是⼀个程序员，需要实现⼀个数据中⼼服务，当有用户请求服务时，需要尽快地服务用户请求，来降低整体延迟</li>
<li><span class="math inline">\(d_i(x_i)=1,2,...,n\)</span></li>
<li><span
class="math inline">\(x_i\)</span>为向用户𝑖分配的资源（如CPU的配额），
<span class="math inline">\(d_i\)</span>为第𝑖个用户的延迟</li>
</ul>
</blockquote>
<h3 id="问题建模-1">问题建模</h3>
<ul>
<li><p>最小化整体的延迟：<span
class="math inline">\(\sum_id_i(x_i)\)</span></p></li>
<li><p>同时不能超过服务器的总资源：<span
class="math inline">\(\sum_ix_i\le C\)</span>, <span
class="math inline">\(x_i\ge0\)</span></p></li>
</ul>
<h3 id="如何合理分配资源-1">如何合理分配资源？</h3>
<h2 id="优化问题3">优化问题3</h2>
<h3 id="题目-2">题目</h3>
<blockquote>
<ul>
<li>现在有⼀百万张图片，⼀共分成了1000个类别𝑝，我们设计了⼀个复杂的神经⽹络，可以输入图片矩阵输出类别概率𝑞。为了训练这个神经⽹络，需要优化该网络，最小化预测误差。</li>
</ul>
</blockquote>
<h3 id="问题建模-2">问题建模</h3>
<p><span class="math display">\[
min-\sum_{x\in X} p(x)\log q(x)
\]</span></p>
<h3
id="神经网络可能包括上亿的参数如何快速优化">神经网络可能包括上亿的参数，如何快速优化？</h3>
<h2 id="优化数学规划">优化/数学规划</h2>
<h3 id="优化问题">优化问题</h3>
<p><span class="math display">\[
\min f_0(x).\\
\text{s.t.}\ \ f_i(x)\le0,\quad i=1,...,m
\]</span></p>
<blockquote>
<p>其中</p>
<ul>
<li><span
class="math inline">\(x=(x_1,x_2,...,x_n)\)</span>：优化变量(variable)</li>
<li><span class="math inline">\(f_0:
\mathbb{R}^n\rightarrow\mathbb{R}\)</span>：目标函数(Objective
function)</li>
<li><span class="math inline">\(f_i:
\mathbb{R}^n\rightarrow\mathbb{R},i=1,...m\)</span>：约束函数(Constraints)</li>
<li>最优解<span
class="math inline">\(x^*\)</span>：所有在定义域且满⾜约束条件的解中使得目标函数<span
class="math inline">\(f_0\)</span>最小的<span
class="math inline">\(x\)</span></li>
<li>最优值<span class="math inline">\(p*:f_0(x^*)\)</span></li>
</ul>
</blockquote>
<h1 id="优化问题分类">优化问题分类</h1>
<h2 id="线性非线性规划">线性/非线性规划</h2>
<h3 id="线性规划">线性规划：</h3>
<ul>
<li>如果目标函数与约束函数都是线性的，则为线性规划（Linear
programming）</li>
<li><span class="math inline">\(f_i(\alpha x+\beta y)=\alpha
f_i(x)+\beta f_i(y),i=0,1,...,m\)</span></li>
<li>单纯形法(simplex method)</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453912.png" alt="image-20230918210805588" style="zoom:80%;" /></p>
<h3 id="非线性规划">非线性规划：</h3>
<ul>
<li>如果目标函数与约束函数有⼀个不是线性的，则为非线性规划（Non-Linear
programming）</li>
</ul>
<h2 id="凸非凸规划">凸/非凸规划</h2>
<h3 id="凸规划">凸规划：</h3>
<ul>
<li>可行解集是凸集，目标函数是凸函数</li>
<li><span class="math inline">\(f_i(\alpha x+\beta y)\le\alpha
f_i(x)+\beta f_i(y),i=0,1,...,m\)</span></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453003.png" alt="image-20230918211043295" style="zoom:80%;" /></p>
<h3 id="非凸规划">非凸规划：</h3>
<ul>
<li>可行解集不是凸集或目标函数不是凸函数</li>
</ul>
<h2 id="光滑非光滑规划">光滑/非光滑规划</h2>
<h3 id="光滑规划">光滑规划：</h3>
<ul>
<li>如果目标函数<span class="math inline">\(f_0(x)\)</span>是光滑的</li>
<li>光滑：在函数的每⼀点都可微</li>
</ul>
<h3 id="非光滑规划">非光滑规划</h3>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453017.png" alt="image-20230918211232374" style="zoom: 67%;" /></p>
<h2 id="连续离散规划">连续/离散规划</h2>
<h3 id="连续规划">连续规划：</h3>
<ul>
<li>可行解集是⼀个连续的域</li>
</ul>
<h3 id="离散规划">离散规划：</h3>
<ul>
<li>可行解集是离散的</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453034.png" alt="image-20230918211413357" style="zoom:80%;" /></p>
<h2 id="单目标多目标规划">单目标/多目标规划</h2>
<h3 id="多目标规划">多目标规划：</h3>
<ul>
<li>同时有多个需要优化的目标</li>
<li><span class="math inline">\(\min f_1(x),f_2(x)\)</span></li>
<li>可以通过加权转化为单目标优化问题</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453357.png" alt="image-20230918211623764" style="zoom:80%;" /></p>
<h2 id="博弈优化">博弈优化</h2>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453313.png" alt="image-20230918211659661" style="zoom:80%;" /></p>
<h2 id="确定随机优化">确定/随机优化</h2>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453128.png" alt="image-20230918211728804" style="zoom:80%;" /></p>
<h1 id="典型优化问题">典型优化问题</h1>
<h2 id="最小二乘">最小二乘</h2>
<h3 id="数据拟合问题">数据拟合问题：</h3>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453688.png" alt="image-20230918211820833" style="zoom:80%;" /></p>
<ul>
<li>目标函数</li>
</ul>
<p><span class="math display">\[
\min\sum^N_{i=1}\left(y_i-f(x_i)\right)^2
\]</span></p>
<h2 id="稀疏优化">稀疏优化</h2>
<h3 id="考虑线性方程组求解问题">考虑线性方程组求解问题</h3>
<p><span class="math display">\[
Ax=b
\]</span></p>
<blockquote>
<p>其中<span class="math inline">\(x\in R^n,b\in R^m,A\in R^{m\times
n}\)</span></p>
<p>向量<span class="math inline">\(b\)</span>的维度远小于向量<span
class="math inline">\(x\)</span>的维度，即<span
class="math inline">\(m\ll n\)</span></p>
</blockquote>
<ul>
<li>在信号传输过程中，希望通过接收到长度为<span
class="math inline">\(m\)</span>的数字信号<span
class="math inline">\(b\)</span>精确地重构原始信号<span
class="math inline">\(x\)</span></li>
<li>方程组是欠定的，因此存在无穷多个解，重构出原始信号看似很难</li>
</ul>
<h3
id="稀疏先验精确解u只有10的元素非零即u是如下l_0范数问题的最优解">稀疏先验：精确解<span
class="math inline">\(u\)</span>只有<span
class="math inline">\(10\%\)</span>的元素非零，即<span
class="math inline">\(u\)</span>是如下<span
class="math inline">\(l_0\)</span>范数问题的最优解:</h3>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454632.png" alt="image-20230918212735058" style="zoom:80%;" /></p>
<ul>
<li><span class="math inline">\(l_0\)</span>范数优化问题是 NP
难问题</li>
<li>但<span
class="math inline">\(l_1\)</span>范数优化问题的解可以非常容易地通过现有优化算法得到</li>
<li>若<span class="math inline">\(A,b\)</span>满足一定的条件，向量<span
class="math inline">\(u\)</span>也是<span
class="math inline">\(l_1\)</span>范数优化问题的唯⼀最优解</li>
</ul>
<h2 id="低秩矩阵恢复">低秩矩阵恢复</h2>
<ul>
<li>某视频网站提供了约 48 万用户对 1 万 7
千多部电影的上亿条评级数据，希望对用户的电影评级进行预测，从而改进用户电影推荐系统，为每个用户更有针对性地推荐影片</li>
<li>用矩阵𝑀代表用户评分，每一行表示不同用户，每⼀列表示不同电影</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454615.png" alt="image-20230918213023261" style="zoom: 80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454947.png" alt="image-20230918213048048" style="zoom:80%;" /></p>
<h2 id="深度学习">深度学习</h2>
<h3 id="深度学习分类问题">深度学习分类问题</h3>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454706.png"
alt="image-20230918213132779" />
<figcaption aria-hidden="true">image-20230918213132779</figcaption>
</figure>
<h1 id="求解优化问题">求解优化问题</h1>
<p>对有限资源进⾏有效分配和控制，并达到某种意义上的最优。</p>
<p>通常需要 • 对需求进行定性和定量分析 • 建立恰当的数学模型来描述该问题
• 探索研究模型和算法的理论性质，考察算法的计算性能等 •
设计合适的计算方法来寻找问题的最优解</p>
<h3 id="一般的最优化问题">一般的最优化问题</h3>
<ul>
<li>非常难以求解</li>
<li>可能需要非常长的计算时间，甚⾄找不到最优解</li>
</ul>
<h3 id="类相对简单的问题">⼀类相对简单的问题</h3>
<ul>
<li>最小二乘问题</li>
<li>线性规划问题</li>
<li>凸优化问题</li>
</ul>
<h3 id="更复杂的问题">更复杂的问题</h3>
<ul>
<li>离散、博弈、随机优化</li>
</ul>
<h3 id="定义域">定义域</h3>
<ul>
<li>凸集</li>
</ul>
<h3 id="目标函数">目标函数</h3>
<ul>
<li>凸函数</li>
</ul>
<h3
id="非凸优化问题与凸优化问题的转化">非凸优化问题与凸优化问题的转化</h3>
<ul>
<li>等价转化</li>
<li>对偶理论</li>
</ul>
<h2 id="优化算法">优化算法</h2>
<h3 id="闭式解closed-form-solution">闭式解（closed form solution）</h3>
<ul>
<li>如果我们能用代数表达式给出其最优解，那么这个解称为闭式解，对应的问题往往比较简单</li>
<li>例如：⼆次函数在有界区间上</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454836.png" alt="image-20230918213626044" style="zoom: 67%;" /></p>
<h3
id="实际大多数问题是没有闭式解的需要通过迭代算法求解">实际大多数问题是没有闭式解的，需要通过迭代算法求解</h3>
<ul>
<li>迭代算法的基本思想是:从⼀个初始点<span
class="math inline">\(x_0\)</span>出发，按照某种给定的规则进行迭代，得到⼀个序列<span
class="math inline">\(\{x^k\}\)</span>如果迭代在有限步内终止，那么希望最后一个点就是优化问题的解</li>
<li>例如：梯度类算法、线搜索法、罚函数法</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454918.png" alt="image-20230918213839201" style="zoom:80%;" /></p>
<h2 id="常用优化技巧">常用优化技巧</h2>
<h3 id="泰勒展开">泰勒展开</h3>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191454151.png" alt="image-20230918213955711" style="zoom:80%;" /></p>
<h3 id="对偶">对偶</h3>
<ul>
<li>每个优化问题都有对应的对偶问题，特别是凸的情形，当原始问题比较难解的时候，其对偶问题可能很容易求解</li>
</ul>
<h3 id="拆分">拆分</h3>
<ul>
<li>通过引入变量等方法，讲⼀个复杂的优化问题拆分成多个相对简单的问题</li>
</ul>
]]></content>
      <categories>
        <category>最优化方法</category>
      </categories>
      <tags>
        <tag>学科</tag>
        <tag>最优化方法</tag>
      </tags>
  </entry>
  <entry>
    <title>凸集（Convex Set）</title>
    <url>/2023/09/19/2023/%E5%87%B8%E9%9B%86%EF%BC%88Convex-Set%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>第二课：凸集(Convex Set)</p>
</blockquote>
<span id="more"></span>
<h1 id="重要定义">重要定义</h1>
<h2 id="仿射集">仿射集</h2>
<h3 id="直线">直线：</h3>
<p>对于穿过<span
class="math inline">\(x_1,x_2\)</span>两个不同的点的直线，所有满足以下条件的点：
<span class="math display">\[
x=\theta x_1+(1-\theta)x_2,\theta\in\mathbb{R}
\]</span>
<img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452821.png" alt="image-20230919141052729" style="zoom:67%;" /></p>
<h3 id="仿射集-1">仿射集</h3>
<p>一个集合<span class="math inline">\(C\)</span>是仿射集，若<span
class="math inline">\(\forall x_1,x_2\in C\)</span>，连接<span
class="math inline">\(x_1,x_2\)</span>的直线也在<span
class="math inline">\(C\)</span>内</p>
<blockquote>
<p>思考：</p>
<ul>
<li>该条直线上所有的点组成的集合（是）</li>
<li>空集、点、线段是仿射集吗？（空集是，点是，线段不是）</li>
<li>实数集、正实数集、整数集是仿射集吗？（实数集是、正实数集不是、整数集不是）</li>
</ul>
</blockquote>
<h2 id="凸集convex-set">凸集（Convex Set）</h2>
<h3 id="线段">线段：</h3>
<p>对于穿过<span
class="math inline">\(x_1,x_2\)</span>两点的直线，所有满足以下条件的点:
<span class="math display">\[
x=\theta x_1+(1-\theta)x_2,0\le\theta\le1
\]</span></p>
<h3 id="凸集">凸集：</h3>
<p>集合中任意两点组成的线段仍在该集合中： <span class="math display">\[
x_1,x_2\in C,0\le\theta\le1.\Rightarrow\theta x_1+(1-\theta)x_2\in C
\]</span> 例子：</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452541.png" alt="image-20230919141112752"  /></p>
<blockquote>
<p>思考：</p>
<ul>
<li>点、直线（点是，直线也是）</li>
<li>实数集、正实数集、整数集是否为凸集（都不是）</li>
<li>仿射集是否为凸集（是）</li>
</ul>
</blockquote>
<h2 id="凸组合与凸包">凸组合与凸包</h2>
<h3 id="凸组合convex-combination">凸组合（Convex Combination）：</h3>
<p>对于任意点k个点：<span
class="math inline">\(x_1,x_2,...,x_k\)</span>，凸组合是以下的形式：
<span class="math display">\[
x=\theta_1 x_1+\theta_2 x_2+···\theta_k x_k
\]</span></p>
<blockquote>
<p>其中<span
class="math inline">\(\theta_1+\theta_2+···+\theta_k=1,\theta_i\ge0\)</span></p>
</blockquote>
<p><span class="math inline">\(C\)</span>为凸集<span
class="math inline">\(\Leftrightarrow\)</span><span
class="math inline">\(C\)</span>中任意元素点凸组合属于<span
class="math inline">\(C\)</span></p>
<h3 id="凸包convex-hull">凸包（Convex Hull）：</h3>
<p><span class="math inline">\(conv C\)</span>：所有集合<span
class="math inline">\(C\)</span>中的点的凸组合，是包含<span
class="math inline">\(S\)</span>的最小的凸集</p>
<p>用一个绳子连起来：</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452529.png" alt="image-20230919141134184" style="zoom:80%;" /></p>
<h2 id="凸锥convex-cone">凸锥（Convex Cone）</h2>
<h3 id="锥">锥：</h3>
<p><span class="math inline">\(C\)</span>为锥<span
class="math inline">\(\Leftrightarrow\)</span>对于<span
class="math inline">\(C\)</span>中任意的点<span
class="math inline">\(x\)</span>，<span class="math inline">\(\ theta
x\in C,\theta\ge0\)</span></p>
<h3 id="凸锥">凸锥：</h3>
<p>对于任意的两个点：<span
class="math inline">\(x_1,x_2\)</span>，凸锥是以下的形式： <span
class="math display">\[
x=\theta_1 x_1+\theta_2 x_2
\]</span></p>
<blockquote>
<p>其中<span
class="math inline">\(\theta_1\ge0,\theta_2\ge0\)</span></p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230919141149722.png" alt="image-20230919141149722" style="zoom:67%;" /></p>
<blockquote>
<p>思考：</p>
<ul>
<li>原点是否一定在凸锥上？（是）</li>
<li>经过原点的射线（是）</li>
<li>经过原点的直线（是）</li>
<li>凸锥是凸集吗？（是）</li>
</ul>
</blockquote>
<h2 id="仿射集凸集凸锥的关系">仿射集、凸集、凸锥的关系</h2>
<h3 id="定义">定义：</h3>
<ul>
<li>仿射集：<span
class="math inline">\(\theta_1+\theta_2=1\)</span></li>
<li>凸集：<span
class="math inline">\(\theta_1+\theta_2=1,\theta_i\ge0\)</span></li>
<li>凸锥：<span class="math inline">\(\theta_i\ge0\)</span></li>
</ul>
<h3 id="关系">关系：</h3>
<ul>
<li>仿射集<span class="math inline">\(\subseteq\)</span>凸集</li>
<li>凸锥<span class="math inline">\(\subseteq\)</span>凸集</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452743.png" alt="image-20230919141203364" style="zoom:67%;" /></p>
<h1 id="几种重要的凸集">几种重要的凸集</h1>
<h2 id="超平面和半空间">超平面和半空间</h2>
<h3 id="超平面">超平面：</h3>
<p>满足以下条件的点的集合： <span class="math display">\[
\{x|a^T \boldsymbol{x}=b\}(a\neq0)
\]</span>
<img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452636.png" alt="image-20230919141218903" style="zoom:67%;" /></p>
<blockquote>
<p>超平面是仿射的，也是凸的</p>
</blockquote>
<h3 id="半空间">半空间：</h3>
<p><span class="math display">\[
\{x|a^T\boldsymbol{x}\le b(a\neq0)\}
\]</span></p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452865.png" alt="image-20230919141230877" style="zoom:67%;" /></p>
<h2 id="多面体">多面体</h2>
<ul>
<li><span class="math inline">\(\{x|Ax\le b,Cx=d\}\)</span></li>
<li><span class="math inline">\(A\in R^{m\times n},C\in R^{p\times
n}\)</span></li>
<li>多面体是有限个半空间和超平面的交集</li>
<li>多面体是凸集</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452106.png" alt="image-20230919141245402" style="zoom:67%;" /></p>
<h2 id="对称半正定矩阵">对称半正定矩阵</h2>
<h3 id="预备知识">预备知识：</h3>
<h4 id="对称矩阵sn">对称矩阵<span
class="math inline">\(S^n\)</span>：</h4>
<p>是指以主对角线为对称轴，各元素对应相等的矩阵 <span
class="math display">\[
\begin{bmatrix}
a_{11}&amp;a_{12}&amp;a_{13}&amp;···&amp;a_{1n}\\
a_{21}&amp;a_{22}&amp;a_{23}&amp;···&amp;a_{2n}\\
a_{31}&amp;a_{32}&amp;a_{33}&amp;···&amp;a_{3n}\\
\vdots&amp;\vdots&amp;\vdots&amp;\vdots&amp;\vdots\\
a_{m1}&amp;a_{m2}&amp;a_{m3}&amp;···&amp;a_{mn}
\end{bmatrix}
\]</span></p>
<h3 id="对称半正定矩阵-1">对称半正定矩阵：</h3>
<p>给定一个大小为<span class="math inline">\(n\times
n\)</span>的<strong>实对称矩阵</strong><span
class="math inline">\(A\)</span>，若对于任意长度的<span
class="math inline">\(n\)</span>的非零向量<span
class="math inline">\(x\)</span>，有<span
class="math inline">\(x^TAx\ge0\)</span>恒成立，则矩阵<span
class="math inline">\(A\)</span>是一个半 正定矩阵</p>
<blockquote>
<p>堆成正定矩阵<span class="math inline">\(S^n_{++}\)</span></p>
</blockquote>
<h3 id="对称半正定矩阵集合">对称半正定矩阵集合：</h3>
<p><span class="math display">\[
S^n_+=\{X\in S^n|X\succeq0\}
\]</span></p>
<blockquote>
<p>对称半正定矩阵集合是凸锥</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191452865.png" alt="image-20230919141303814" style="zoom:67%;" /></p>
<h2 id="球与椭球">球与椭球</h2>
<h3 id="球">球：</h3>
<p>满足以下条件的点的集合： <span class="math display">\[
B(x_c,r)=\{x|\|x-x_c\|_2\le r\}=\{x_c+ru|\|u\|_2\le1\}
\]</span></p>
<h3 id="椭球">椭球：</h3>
<p><span class="math display">\[
\{x|(x-x_c)^TP^{-1}(x-x_c)\le1\},P\in S^n_{++}
\]</span></p>
<blockquote>
<p>球是凸集</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453505.png" alt="image-20230919141315764" style="zoom:67%;" /></p>
<h1 id="保凸的运算">保凸的运算</h1>
<h2 id="交集">交集</h2>
<p>定理：任意多个凸集的交集为凸集</p>
<h2 id="仿射变换">仿射变换</h2>
<p>定理：设<span
class="math inline">\(f:\mathbb{R}^n\rightarrow\mathbb{R}^m\)</span>是仿射变换<span
class="math inline">\((f(x)=Ax+b, A\in\mathbb{R}^{m\times n},b\in
\mathbb{R}^m)\)</span>则：</p>
<p>（1）凸集在<span class="math inline">\(f\)</span>下的像是凸集： <span
class="math display">\[
S\subseteq\mathbb{R}^n是凸集\Rightarrow
f(S)\overset{\text{def}}{=}\{f(x)|x\in S\}是凸集；
\]</span> （2）凸集在<span
class="math inline">\(f\)</span>下的原像是凸集： <span
class="math display">\[
C\subseteq\mathbb{R}^m\Rightarrow
f^{-1}(C)\overset{\text{def}}{=}\{x\in\mathbb{R}^n|f(x)\in C\}是凸集.
\]</span></p>
<blockquote>
<p>缩放、平移和投影都是仿射变换</p>
</blockquote>
<h1 id="分离超平面定理">分离超平面定理</h1>
<p>如果<span class="math inline">\(C\)</span>和<span
class="math inline">\(D\)</span>是不相交的两个凸集，则存在非零向量<span
class="math inline">\(a\)</span>和常数<span
class="math inline">\(b\)</span>，使得 <span class="math display">\[
a^Tx\le b, \forall x\in C,且a^Tx\ge b,\forall x\in D,
\]</span>
<img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453319.png" alt="image-20230919141339133" style="zoom:80%;" /></p>
<h1 id="支撑超平面定理">支撑超平面定理</h1>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309191453641.png"
alt="image-20230919141413149" />
<figcaption aria-hidden="true">image-20230919141413149</figcaption>
</figure>
]]></content>
      <categories>
        <category>最优化方法</category>
      </categories>
      <tags>
        <tag>学科</tag>
        <tag>最优化方法</tag>
      </tags>
  </entry>
  <entry>
    <title>美赛O奖论文研读有感</title>
    <url>/2023/02/11/2023/%E7%BE%8E%E8%B5%9BO%E5%A5%96%E8%AE%BA%E6%96%87%E7%A0%94%E8%AF%BB%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<blockquote>
<p>美赛O奖论文研读有感</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>最近我在备战数学建模美赛时，重点研读了两篇O奖论文，一篇是宋浩然大佬仿照的的2020年A题的论文，另一篇是2020年C题的一篇O奖论文。</p>
<h1 id="经验">经验</h1>
<h2 id="关于突出点">关于突出点</h2>
<p>两篇论文都使用了大量图片去佐证自己的观点，而且图片都很工整好看，很吸引人。不仅是流程图，它们也将数据可视化做到极致，真正做到了直观+美观。</p>
<h2 id="关于编程">关于编程</h2>
<p>两篇论文都使用到了<code>Matlab</code>和<code>Python</code>语言，Python可能在处理大数据上有着更大的优势，因为Python的各种第三方包使用起来实在很方便，学习成本也低。这里我推荐两本学习用Python做数据分析的书：</p>
<blockquote>
<p>《利用Python进行数据分析第二版》：主要内容是数据处理，pandas，numpy，matplotlib的使用方法，较为详细</p>
<p>《Python数据科学手册》：一部分和上面那本内容重叠，后面也有讲一些机器学习模型的介绍和使用</p>
</blockquote>
<h2 id="关于图片">关于图片</h2>
<p>两篇论文的图片都很精美，图片像流程图之类的可以用PPT或者亿图图示之类的软件画，像数据可视化则可以使用Python来完成，比如使用第三方库<code>matplotlib</code>进行绘图。</p>
]]></content>
      <categories>
        <category>学科</category>
        <category>数学建模</category>
      </categories>
      <tags>
        <tag>美赛</tag>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title>转载：递归解题三部曲</title>
    <url>/2023/03/13/2023/%E8%BD%AC%E8%BD%BD%EF%BC%9A%E9%80%92%E5%BD%92%E8%A7%A3%E9%A2%98%E4%B8%89%E9%83%A8%E6%9B%B2/</url>
    <content><![CDATA[<blockquote>
<p>转载</p>
</blockquote>
<span id="more"></span>
<p><strong>递归解题三部曲</strong></p>
<p>何为递归？程序反复调用自身即是递归。</p>
<p>我自己在刚开始解决递归问题的时候，总是会去纠结这一层函数做了什么，它调用自身后的下一层函数又做了什么…然后就会觉得实现一个递归解法十分复杂，根本就无从下手。</p>
<p>相信很多初学者和我一样，这是一个思维误区，一定要走出来。既然递归是一个反复调用自身的过程，这就说明它每一级的功能都是一样的，<strong>因此我们只需要关注一级递归的解决过程即可。</strong></p>
<p><a href="https://z3.ax1x.com/2021/09/05/hWr1UK.png"><img
src="https://z3.ax1x.com/2021/09/05/hWr1UK.png" alt="img" /></a></p>
<p>如上图所示，我们需要关心的主要是以下三点：</p>
<ol type="1">
<li>整个递归的终止条件。</li>
<li>一级递归需要做什么？</li>
<li>应该返回给上一级的返回值是什么？</li>
</ol>
<p><strong>因此，也就有了我们解递归题的三部曲：</strong></p>
<ol type="1">
<li><strong>找整个递归的终止条件：递归应该在什么时候结束？</strong></li>
<li><strong>找返回值：应该给上一级返回什么信息？</strong></li>
<li><strong>本级递归应该做什么：在这一级递归中，应该完成什么任务？</strong></li>
</ol>
<p>一定要理解这3步，这就是以后递归秒杀算法题的依据和思路。</p>
<p>但这么说好像很空，我们来以题目作为例子，看看怎么套这个模版，相信3道题下来，你就能慢慢理解这个模版。之后再解这种套路递归题都能直接秒了。</p>
<h2
id="例1求二叉树的最大深度"><strong>例1：求二叉树的最大深度</strong></h2>
<p>先看一道简单的Leetcode题目： <a
href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">Leetcode
104. 二叉树的最大深度</a></p>
<p>题目很简单，求二叉树的最大深度，那么直接套递归解题三部曲模版：</p>
<ol type="1">
<li><strong>找终止条件。</strong>
什么情况下递归结束？当然是树为空的时候，此时树的深度为0，递归就结束了。</li>
<li><strong>找返回值。</strong>
应该返回什么？题目求的是树的最大深度，我们需要从每一级得到的信息自然是当前这一级对应的树的最大深度，因此我们的返回值应该是当前树的最大深度，这一步可以结合第三步来看。</li>
<li><strong>本级递归应该做什么。</strong>
首先，还是强调要走出之前的思维误区，递归后我们眼里的树一定是这个样子的，看下图。此时就三个节点：root、root.left、root.right，其中根据第二步，root.left和root.right分别记录的是root的左右子树的最大深度。那么本级递归应该做什么就很明确了，自然就是在root的左右子树中选择较大的一个，再加上1就是以root为根的子树的最大深度了，然后再返回这个深度即可。</li>
</ol>
<p><a href="https://z3.ax1x.com/2021/09/05/hWr724.png"><img
src="https://z3.ax1x.com/2021/09/05/hWr724.png" alt="img" /></a></p>
<p>具体Java代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="comment">//终止条件：当树为空时结束递归，并返回当前深度0</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//root的左、右子树的最大深度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">leftDepth</span> <span class="operator">=</span> maxDepth(root.left);</span><br><span class="line">        <span class="type">int</span> <span class="variable">rightDepth</span> <span class="operator">=</span> maxDepth(root.right);</span><br><span class="line">        <span class="comment">//返回的是左右子树的最大深度+1</span></span><br><span class="line">        <span class="keyword">return</span> Math.max(leftDepth, rightDepth) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当足够熟练后，也可以和Leetcode评论区一样，很骚的几行代码搞定问题，让之后的新手看的一脸懵逼(这道题也是我第一次一行代码搞定一道Leetcode题)：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> root == <span class="literal">null</span> ? <span class="number">0</span> : Math.max(maxDepth(root.left), maxDepth(root.right)) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="例2两两交换链表中的节点">例2：两两交换链表中的节点</h2>
<p>看了一道递归套路解决二叉树的问题后，有点套路搞定递归的感觉了吗？我们再来看一道Leetcode中等难度的链表的问题，掌握套路后这种中等难度的问题真的就是秒：<a
href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">Leetcode
24. 两两交换链表中的节点</a></p>
<p>直接上三部曲模版：</p>
<ol type="1">
<li><strong>找终止条件。</strong>
什么情况下递归终止？没得交换的时候，递归就终止了呗。因此当链表只剩一个节点或者没有节点的时候，自然递归就终止了。</li>
<li><strong>找返回值。</strong>
我们希望向上一级递归返回什么信息？由于我们的目的是两两交换链表中相邻的节点，因此自然希望交换给上一级递归的是已经完成交换处理，即已经处理好的链表。</li>
<li><strong>本级递归应该做什么。</strong>
结合第二步，看下图！由于只考虑本级递归，所以这个链表在我们眼里其实也就三个节点：head、head.next、已处理完的链表部分。而本级递归的任务也就是交换这3个节点中的前两个节点，就很easy了。</li>
</ol>
<p><a href="https://z3.ax1x.com/2021/09/05/hWrva6.png"><img
src="https://z3.ax1x.com/2021/09/05/hWrva6.png" alt="img" /></a></p>
<p>附上Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">swapPairs</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">      	<span class="comment">//终止条件：链表只剩一个节点或者没节点了，没得交换了。返回的是已经处理好的链表</span></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">null</span> || head.next == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">      	<span class="comment">//一共三个节点:head, next, swapPairs(next.next)</span></span><br><span class="line">      	<span class="comment">//下面的任务便是交换这3个节点中的前两个节点</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">next</span> <span class="operator">=</span> head.next;</span><br><span class="line">        head.next = swapPairs(next.next);</span><br><span class="line">        next.next = head;</span><br><span class="line">      	<span class="comment">//根据第二步：返回给上一级的是当前已经完成交换后，即处理好了的链表部分</span></span><br><span class="line">        <span class="keyword">return</span> next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="例3平衡二叉树">例3：平衡二叉树</h2>
<p>相信经过以上2道题，你已经大概理解了这个模版的解题流程了。</p>
<p>那么请你先不看以下部分，尝试解决一下这道easy难度的Leetcode题（个人觉得此题比上面的medium难度要难）：<a
href="https://leetcode-cn.com/problems/balanced-binary-tree/comments/">Leetcode
110. 平衡二叉树</a></p>
<p>我觉得这个题真的是集合了模版的精髓所在，下面套三部曲模版：</p>
<ol type="1">
<li><p><strong>找终止条件。</strong>
什么情况下递归应该终止？自然是子树为空的时候，空树自然是平衡二叉树了。</p></li>
<li><p><strong>应该返回什么信息：</strong></p>
<p>为什么我说这个题是集合了模版精髓？正是因为此题的返回值。要知道我们搞这么多花里胡哨的，都是为了能写出正确的递归函数，因此在解这个题的时候，我们就需要思考，我们到底希望返回什么值？</p>
<p>何为平衡二叉树？平衡二叉树即左右两棵子树高度差不大于1的二叉树。而对于一颗树，它是一个平衡二叉树需要满足三个条件：<strong>它的左子树是平衡二叉树，它的右子树是平衡二叉树，它的左右子树的高度差不大于1</strong>。换句话说：如果它的左子树或右子树不是平衡二叉树，或者它的左右子树高度差大于1，那么它就不是平衡二叉树。</p>
<p>而在我们眼里，这颗二叉树就3个节点：root、left、right。那么我们应该返回什么呢？如果返回一个当前树是否是平衡二叉树的boolean类型的值，那么我只知道left和right这两棵树是否是平衡二叉树，无法得出left和right的高度差是否不大于1，自然也就无法得出root这棵树是否是平衡二叉树了。而如果我返回的是一个平衡二叉树的高度的int类型的值，那么我就只知道两棵树的高度，但无法知道这两棵树是不是平衡二叉树，自然也就没法判断root这棵树是不是平衡二叉树了。</p>
<p>因此，这里我们返回的信息应该是既包含子树的深度的int类型的值，又包含子树是否是平衡二叉树的boolean类型的值。可以单独定义一个ReturnNode类，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ReturnNode</span>&#123;</span><br><span class="line">  <span class="type">boolean</span> isB;</span><br><span class="line">  <span class="type">int</span> depth;</span><br><span class="line">  <span class="comment">//构造方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">ReturnNode</span><span class="params">(<span class="type">boolean</span> isB, <span class="type">int</span> depth)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.isB = isB;</span><br><span class="line">    <span class="built_in">this</span>.depth = depth;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>本级递归应该做什么。</strong>
知道了第二步的返回值后，这一步就很简单了。目前树有三个节点：root，left，right。我们首先判断left子树和right子树是否是平衡二叉树，如果不是则直接返回false。再判断两树高度差是否不大于1，如果大于1也直接返回false。否则说明以root为节点的子树是平衡二叉树，那么就返回true和它的高度。</p></li>
</ol>
<p>具体的Java代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">//这个ReturnNode是参考我描述的递归套路的第二步：思考返回值是什么</span></span><br><span class="line">    <span class="comment">//一棵树是BST等价于它的左、右俩子树都是BST且俩子树高度差不超过1</span></span><br><span class="line">    <span class="comment">//因此我认为返回值应该包含当前树是否是BST和当前树的高度这两个信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">ReturnNode</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> isB;</span><br><span class="line">        <span class="type">int</span> depth;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ReturnNode</span><span class="params">(<span class="type">int</span> depth, <span class="type">boolean</span> isB)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.isB = isB;</span><br><span class="line">            <span class="built_in">this</span>.depth = depth;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//主函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBalanced</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isBST(root).isB;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//参考递归套路的第三部：描述单次执行过程是什么样的</span></span><br><span class="line">    <span class="comment">//这里的单次执行过程具体如下：</span></span><br><span class="line">    <span class="comment">//是否终止?-&gt;没终止的话，判断是否满足不平衡的三个条件-&gt;返回值</span></span><br><span class="line">    <span class="keyword">public</span> ReturnNode <span class="title function_">isBST</span><span class="params">(TreeNode root)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ReturnNode</span>(<span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不平衡的情况有3种：左树不平衡、右树不平衡、左树和右树差的绝对值大于1</span></span><br><span class="line">        <span class="type">ReturnNode</span> <span class="variable">left</span> <span class="operator">=</span> isBST(root.left);</span><br><span class="line">        <span class="type">ReturnNode</span> <span class="variable">right</span> <span class="operator">=</span> isBST(root.right);</span><br><span class="line">        <span class="keyword">if</span>(left.isB == <span class="literal">false</span> || right.isB == <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ReturnNode</span>(<span class="number">0</span>, <span class="literal">false</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(Math.abs(left.depth - right.depth) &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ReturnNode</span>(<span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//不满足上面3种情况，说明平衡了，树的深度为左右俩子树最大深度+1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ReturnNode</span>(Math.max(left.depth, right.depth) + <span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一些可以用这个套路解决的题">一些可以用这个套路解决的题</h2>
<p>暂时就写这么多啦，作为一个高考语文及格分，大学又学了工科的人，表述能力实在差因此啰啰嗦嗦写了一大堆，希望大家能理解这个很好用的套路。</p>
<p>下面我再列举几道我在刷题过程中遇到的也是用这个套路秒的题，真的太多了，大部分链表和树的递归题都能这么秒，因为树和链表天生就是适合递归的结构。</p>
<p>我会随时补充，正好大家可以看了上面三个题后可以拿这些题来练练手，看看自己是否能独立快速准确的写出递归解法了。</p>
<p><a
href="https://leetcode-cn.com/problems/symmetric-tree/comments/">Leetcode
101. 对称二叉树</a></p>
<p><a
href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">Leetcode
111. 二叉树的最小深度</a></p>
<p><a
href="https://leetcode-cn.com/problems/invert-binary-tree/">Leetcode
226. 翻转二叉树</a>：这个题的备注是最骚的。Mac
OS下载神器homebrew的大佬作者去面试谷歌，没做出来这道算法题，然后被谷歌面试官怼了：”我们90％的工程师使用您编写的软件(Homebrew)，但是您却无法在面试时在白板上写出翻转二叉树这道题，这太糟糕了。”</p>
<p><a
href="https://leetcode-cn.com/problems/merge-two-binary-trees/">Leetcode
617. 合并二叉树</a></p>
<p><a
href="https://leetcode-cn.com/problems/maximum-binary-tree/">Leetcode
654. 最大二叉树</a></p>
<p><a
href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">Leetcode
83. 删除排序链表中的重复元素</a></p>
<p>来自：https://lyl0724.github.io/2020/01/25/1/</p>
]]></content>
      <categories>
        <category>刷题</category>
        <category>解题技巧</category>
      </categories>
      <tags>
        <tag>刷题</tag>
        <tag>解题技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾博客</title>
    <url>/2023/09/03/2023/%E9%87%8D%E6%8B%BE%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>经过一个学期重拾个人博客</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<p>在2023年暑假的时候我创建了自己的个人博客，通过github
pages使用Hexo框架加上butterfly主题，荒废了一个学期，现在决定重新填起这个坑。</p>
<h1 id="经过">经过</h1>
<p>在寒假发了几个博客后，发现使用markdown写博客加入图片时不能做到可视化，而且当时还不知道图床这个东西，所以图片什么的都存到了本地，管理和存储起来十分麻烦，还给网站增加流量负载，所以弃坑了。</p>
<p>再后来我在CSDN上发现了南邮的一个学长的博客，名叫<a
href="https://wonzwang.blog.csdn.net/?type=blog">Wonz</a>，在他的博客中我学到了很多，也从他的友链中知道了很多学长，看着他们的博客，我也想重拾自己的坑了。</p>
<p>有时候我也想在有些触动的时候将自己的想法记录下来，但奈何自己太懒，在这个暑假我去了一个单位实习，在实习的过程中我渐渐可以熟练地使用git，也在实习的过程中产生越来越多的想法，现在实习结束了，也想总结一下，慢慢填补这个坑吧。</p>
<h1 id="准备">准备</h1>
<p>之前为了网站看起来炫酷一点，我就选择了butterfly这个主题，不过这样的代价是图片太多了，而且不够简洁，过于花里胡哨，这样对网站的加载速度也有影响，也不好将注意力放在写作上。</p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/IMG_3840.JPG" alt="IMG_3840" style="zoom: 33%;" /></p>
<p>所以我换了个新的主题——<strong>Next主题</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/image-20230903171120400.png" alt="image-20230903171120400" style="zoom: 33%;" /></p>
<p>这个主题我是看的<a
href="https://wonz.wang/">Wonz</a>学长的个人博客在用的，十分简洁，内容清晰明了，我在暑假也看到过一段话：</p>
<blockquote>
<p>技术博客不需要弄得太花里胡哨，简单清晰才是王道。</p>
</blockquote>
<p>我看见他置顶博客的描述：</p>
<blockquote>
<p>阮一峰大神曾经说过: 喜欢写 Blog 的人, 会经历 3 个阶段。</p>
<p>第一阶段，刚接触 Blog，觉得很新鲜，试着选择一个免费空间来写。
第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p>
</blockquote>
<p>我对这话深有感触，本来我也在想要不要自己搞个服务器部署博客，发现根本没必要，还不安全，有github就很方便。</p>
<h1 id="展望">展望</h1>
<p>希望接下来能静下心来，将自己的所见所想记录下来，多输出些技术博客，提升自己的竞争力吧。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Docker搭建完全分布式Hadoop集群</title>
    <url>/2023/09/19/2023/%E9%80%9A%E8%BF%87Docker%E6%90%AD%E5%BB%BA%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8FHadoop%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<blockquote>
<p>基于上一篇博客进行拓展</p>
</blockquote>
<span id="more"></span>
<h1 id="前言">前言</h1>
<blockquote>
<p><a
href="https://www.justinchoi.top/2023/09/07/2023/Ubuntu%E9%85%8D%E7%BD%AEhadoop%EF%BC%88%E5%9F%BA%E4%BA%8EDocker%EF%BC%89/">上一次</a>我们搭建了基于Docker的伪分布式Hadoop集群，这次来搭建分布式的</p>
</blockquote>
<h1 id="一为集群单独构建虚拟网络">一、为集群单独构建虚拟网络</h1>
<p>现在的 Docker 网络能够提供 DNS
解析功能，我们可以使用如下命令为接下来的 Hadoop
集群单独构建一个虚拟的网络：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker network create --driver=bridge hadoop</span><br></pre></td></tr></table></figure>
<p>使用下面这个命令查看 Docker 中的网络，可以看到刚刚创建的名为 hadoop
的虚拟桥接网络：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker network ls</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145415.png" alt="image-20230919201453731" style="zoom: 67%;" /></p>
<h1 id="二进入上次搭建好的容器">二、进入上次搭建好的容器</h1>
<p>我们通过上次制作的镜像启动一个容器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -dit --name=master --hostname=master hdp</span><br></pre></td></tr></table></figure>
<p>我们进入<code>master</code>容器中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it master /bin/bash</span><br></pre></td></tr></table></figure>
<h1 id="三配置hadoop环境">三、配置Hadoop环境</h1>
<p>在上一次我们已经配置了一个伪分布式的Hadoop环境，接下来我们需要对那些文件再进一步修改。</p>
<h2 id="修改core-site.xml">1.修改<code>core-site.xml</code></h2>
<p>打开<code>/usr/local/hadoop-3.3.1/etc/hadoop</code>路径下的<code>core-site.xml</code>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/hadoop-3.3.1</span><br><span class="line">cd etc/hadoop</span><br><span class="line">vim core-site.xml</span><br></pre></td></tr></table></figure>
<p>修改后是这样的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">　　&lt;!--指定nameNode的地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://master:8020&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--指定Hadoop数据的存储目录--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/usr/local/hadoop/data&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--配置HDFS网页登陆使用的静态用户，配置这个之后才有权限可以在网页端删除文件、文件夹--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;root&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改hdfs-site.xml">2.修改<code>hdfs-site.xml</code></h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim hdfs-site.xml</span><br></pre></td></tr></table></figure>
<p>修改后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">　　&lt;!--文件的存储个数--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--nn web端访问地址，使用网页访问HDFS文件系统就是这个端口--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;master:9870&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--2nn web端访问地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;master:9868&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--网页查看HDFS文件内容，出现Couldn‘t preview the file报错，需要配置的参数--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改mapred-site.xml">3.修改<code>mapred-site.xml</code></h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim mapred-site.xml</span><br></pre></td></tr></table></figure>
<p>修改后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">　　&lt;!--指定MapReduce程序运行在Yarn上--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改yarn-site.xml">4.修改<code>yarn-site.xml</code></h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim yarn-site.xml</span><br></pre></td></tr></table></figure>
<p>修改后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">　　&lt;!--指定MR走 shuffle--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--指定ResourceManager的地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;h01&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">　　&lt;!--环境变量的继承--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;         </span><br><span class="line">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改workers">5.修改<code>workers</code></h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim workers</span><br></pre></td></tr></table></figure>
<p>修改后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：master这些后面不要有空格！slave2后面，不要有空的行！自己准备起多少集群，就在这里写几个，要是准备起5个集群，就写到slave4。</p>
</blockquote>
<h1 id="四在docker中启动集群">四、在Docker中启动集群</h1>
<h2 id="先将容器导出为镜像">1.先将容器导出为镜像</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker commit master nethdp</span><br></pre></td></tr></table></figure>
<h2 id="启动三个终端">2.启动三个终端</h2>
<ul>
<li><p>第一条命令启动的是<code>master</code>做<code>master</code>节点的，所以要开放一些端口，用来访问web页面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -dit --network hadoop --hostname=master --name=master -p 9870:9870 -p 8088:8088 nethdp /bin/bash</span><br></pre></td></tr></table></figure></li>
<li><p>后面几条命令都类似，只要注意修改名字和主机名就行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -dit --network hadoop -hostname=slave1 --name=slave1 nethdp /bin/bash</span><br></pre></td></tr></table></figure></li>
<li><p>第三条命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -dit --network hadoop -hostname=slave2 --name=slave2 nethdp /bin/bash</span><br></pre></td></tr></table></figure></li>
</ul>
<h2
id="接下来在master主机中启动hadoop集群">3.接下来在<code>master</code>主机中启动Hadoop集群</h2>
<p>先在hadoop安装目录进行格式化操作，不格式化操作，hdfs起不来（<strong>只有第一次启动</strong>的时候需要初始化，以后启动就不需要了，先删除所有机器的
data和logs目录，然后再进行格式化）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145608.png" alt="image-20230919205754453" style="zoom:80%;" /></p>
<p>然后启动HDFS集群：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>
<figure>
<img
src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145588.png"
alt="image-20230919210507605" />
<figcaption aria-hidden="true">image-20230919210507605</figcaption>
</figure>
<p>最后，启动yarn集群管理节点：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>
<p>都启动完成后，使用 jps 命令查看：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145662.png" alt="image-20230919210554410" style="zoom:80%;" /></p>
<p>可以看到，除了Jps，一共有5个进程，因为这里没有将
nameNode、ResourceManager、SecondaryNameNode分开部署，所以都在
h01这一台机器上，实际生产中，应该是需要分开部署的。</p>
<p>至此，Hadoop 集群已经构建好了。</p>
<h1 id="五网页访问">五、网页访问</h1>
<h2 id="浏览器访问本机的9870端口">1.浏览器访问本机的9870端口</h2>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145278.png" alt="image-20230919210729977" style="zoom: 67%;" /></p>
<h2 id="浏览器访问本机的8088端口">2.浏览器访问本机的8088端口</h2>
<p><img src="https://cdn.jsdelivr.net/gh/JUSTINAYA/My-ImgHost@main/img/202309201145164.png" alt="image-20230919210811664" style="zoom:67%;" /></p>
<blockquote>
<p>参考：</p>
<p><a
href="https://www.cnblogs.com/luo-c/p/15831441.html">https://www.cnblogs.com/luo-c/p/15831441.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Docker</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
</search>
